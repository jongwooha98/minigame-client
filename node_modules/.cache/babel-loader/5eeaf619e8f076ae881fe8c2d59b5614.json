{"ast":null,"code":"(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory(require(\"clsx\"), require(\"react\"), require(\"react-fast-compare\"), require(\"react-router-dom\"), require(\"react-transition-group\"), require(\"zenscroll\"));else if (typeof define === 'function' && define.amd) define([\"clsx\", \"react\", \"react-fast-compare\", \"react-router-dom\", \"react-transition-group\", \"zenscroll\"], factory);else {\n    var a = typeof exports === 'object' ? factory(require(\"clsx\"), require(\"react\"), require(\"react-fast-compare\"), require(\"react-router-dom\"), require(\"react-transition-group\"), require(\"zenscroll\")) : factory(root[\"clsx\"], root[\"react\"], root[\"react-fast-compare\"], root[\"react-router-dom\"], root[\"react-transition-group\"], root[\"zenscroll\"]);\n\n    for (var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n  }\n})(self, function (__WEBPACK_EXTERNAL_MODULE__536__, __WEBPACK_EXTERNAL_MODULE__297__, __WEBPACK_EXTERNAL_MODULE__53__, __WEBPACK_EXTERNAL_MODULE__146__, __WEBPACK_EXTERNAL_MODULE__810__, __WEBPACK_EXTERNAL_MODULE__148__) {\n  return (\n    /******/\n    (() => {\n      // webpackBootstrap\n\n      /******/\n      var __webpack_modules__ = {\n        /***/\n        654: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n          \"use strict\";\n\n          __webpack_require__.r(__webpack_exports__);\n          /* harmony export */\n\n\n          __webpack_require__.d(__webpack_exports__, {\n            /* harmony export */\n            \"useLocation\": () =>\n            /* reexport safe */\n            _navigator__WEBPACK_IMPORTED_MODULE_0__.useLocation,\n\n            /* harmony export */\n            \"useRouteMatch\": () =>\n            /* reexport safe */\n            _navigator__WEBPACK_IMPORTED_MODULE_0__.useRouteMatch,\n\n            /* harmony export */\n            \"Navigator\": () =>\n            /* reexport safe */\n            _navigator__WEBPACK_IMPORTED_MODULE_0__.Navigator,\n\n            /* harmony export */\n            \"Screen\": () =>\n            /* reexport safe */\n            _navigator__WEBPACK_IMPORTED_MODULE_0__.Screen,\n\n            /* harmony export */\n            \"ScreenComponentProps\": () =>\n            /* reexport safe */\n            _navigator__WEBPACK_IMPORTED_MODULE_0__.ScreenComponentProps,\n\n            /* harmony export */\n            \"ScreenHelmet\": () =>\n            /* reexport safe */\n            _navigator__WEBPACK_IMPORTED_MODULE_0__.ScreenHelmet,\n\n            /* harmony export */\n            \"useNavigator\": () =>\n            /* reexport safe */\n            _navigator__WEBPACK_IMPORTED_MODULE_0__.useNavigator,\n\n            /* harmony export */\n            \"useParams\": () =>\n            /* reexport safe */\n            _navigator__WEBPACK_IMPORTED_MODULE_0__.useParams,\n\n            /* harmony export */\n            \"useQueryParams\": () =>\n            /* reexport safe */\n            _navigator__WEBPACK_IMPORTED_MODULE_0__.useQueryParams\n            /* harmony export */\n\n          });\n          /* harmony import */\n\n\n          var _navigator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(323);\n          /***/\n\n        },\n\n        /***/\n        368: () => {\n          /***/\n        },\n\n        /***/\n        323: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n          \"use strict\"; // EXPORTS\n\n          __webpack_require__.d(__webpack_exports__, {\n            \"Navigator\": () =>\n            /* reexport */\n            navigator_Navigator,\n            \"Screen\": () =>\n            /* reexport */\n            navigator_Screen,\n            \"ScreenComponentProps\": () =>\n            /* reexport */\n            ScreenComponentProps.ScreenComponentProps,\n            \"ScreenHelmet\": () =>\n            /* reexport */\n            navigator_ScreenHelmet,\n            \"useLocation\": () =>\n            /* reexport */\n            external_react_router_dom_.useLocation,\n            \"useNavigator\": () =>\n            /* reexport */\n            useNavigator,\n            \"useParams\": () =>\n            /* reexport */\n            useParams,\n            \"useQueryParams\": () =>\n            /* reexport */\n            useQueryParams,\n            \"useRouteMatch\": () =>\n            /* reexport */\n            external_react_router_dom_.useRouteMatch\n          }); // EXTERNAL MODULE: external \"react-router-dom\"\n\n\n          var external_react_router_dom_ = __webpack_require__(146); // EXTERNAL MODULE: external \"clsx\"\n\n\n          var external_clsx_ = __webpack_require__(536);\n\n          var external_clsx_default = /*#__PURE__*/__webpack_require__.n(external_clsx_); // EXTERNAL MODULE: external \"react\"\n\n\n          var external_react_ = __webpack_require__(297);\n\n          var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_); // EXTERNAL MODULE: external \"react-transition-group\"\n\n\n          var external_react_transition_group_ = __webpack_require__(810); // EXTERNAL MODULE: external \"zenscroll\"\n\n\n          var external_zenscroll_ = __webpack_require__(148);\n\n          var external_zenscroll_default = /*#__PURE__*/__webpack_require__.n(external_zenscroll_);\n\n          ; // CONCATENATED MODULE: ./src/navigator/contexts/ContextNavigatorOptions.ts\n\n          var ContextNavigatorOptions = (0, external_react_.createContext)(null);\n          var NavigatorOptionsProvider = ContextNavigatorOptions.Provider;\n\n          function useNavigatorOptions() {\n            return (0, external_react_.useContext)(ContextNavigatorOptions);\n          }\n\n          ; // CONCATENATED MODULE: ./src/navigator/contexts/ContextScreenInstanceInfo.ts\n\n          var ContextScreenInstanceInfo = (0, external_react_.createContext)(null);\n          var ScreenInstanceInfoProvider = ContextScreenInstanceInfo.Provider;\n\n          function useScreenInstanceInfo() {\n            return (0, external_react_.useContext)(ContextScreenInstanceInfo);\n          }\n\n          ; // CONCATENATED MODULE: ./src/navigator/contexts/ContextScreenInstanceOptions.ts\n\n          var ContextScreenInstanceOptions = (0, external_react_.createContext)(null);\n          var ScreenInstanceOptionsProvider = ContextScreenInstanceOptions.Provider;\n\n          function useScreenInstanceOptions() {\n            return (0, external_react_.useContext)(ContextScreenInstanceOptions);\n          }\n\n          ; // CONCATENATED MODULE: ./src/navigator/contexts/index.ts\n          // EXTERNAL MODULE: external \"react-fast-compare\"\n\n          var external_react_fast_compare_ = __webpack_require__(53);\n\n          var external_react_fast_compare_default = /*#__PURE__*/__webpack_require__.n(external_react_fast_compare_);\n\n          ; // CONCATENATED MODULE: ./src/navigator/store/createStore.ts\n\n          function createStore(initialState) {\n            var _state = initialState();\n\n            var _listenerIdx = 1;\n\n            function createListenerIdx() {\n              return _listenerIdx += 1;\n            }\n\n            var _listeners = {};\n            return {\n              getState: function getState() {\n                return _state;\n              },\n              setState: function setState(setter) {\n                var prevState = _state;\n                _state = setter(_state);\n                var state = _state;\n                Object.values(_listeners).map(function (fn) {\n                  return fn(prevState, state);\n                });\n              },\n              listen: function listen(fn) {\n                var idx = createListenerIdx();\n                _listeners[idx] = fn;\n\n                function dispose() {\n                  delete _listeners[idx];\n                }\n\n                return dispose;\n              }\n            };\n          }\n\n          ; // CONCATENATED MODULE: ./src/navigator/store/index.tsx\n\n          function _toConsumableArray(arr) {\n            return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n          }\n\n          function _nonIterableSpread() {\n            throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n          }\n\n          function _iterableToArray(iter) {\n            if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n          }\n\n          function _arrayWithoutHoles(arr) {\n            if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n          }\n\n          function ownKeys(object, enumerableOnly) {\n            var keys = Object.keys(object);\n\n            if (Object.getOwnPropertySymbols) {\n              var symbols = Object.getOwnPropertySymbols(object);\n              if (enumerableOnly) symbols = symbols.filter(function (sym) {\n                return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n              });\n              keys.push.apply(keys, symbols);\n            }\n\n            return keys;\n          }\n\n          function _objectSpread(target) {\n            for (var i = 1; i < arguments.length; i++) {\n              var source = arguments[i] != null ? arguments[i] : {};\n\n              if (i % 2) {\n                ownKeys(Object(source), true).forEach(function (key) {\n                  _defineProperty(target, key, source[key]);\n                });\n              } else if (Object.getOwnPropertyDescriptors) {\n                Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n              } else {\n                ownKeys(Object(source)).forEach(function (key) {\n                  Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n                });\n              }\n            }\n\n            return target;\n          }\n\n          function _defineProperty(obj, key, value) {\n            if (key in obj) {\n              Object.defineProperty(obj, key, {\n                value: value,\n                enumerable: true,\n                configurable: true,\n                writable: true\n              });\n            } else {\n              obj[key] = value;\n            }\n\n            return obj;\n          }\n\n          function _slicedToArray(arr, i) {\n            return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n          }\n\n          function _nonIterableRest() {\n            throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n          }\n\n          function _unsupportedIterableToArray(o, minLen) {\n            if (!o) return;\n            if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n            var n = Object.prototype.toString.call(o).slice(8, -1);\n            if (n === \"Object\" && o.constructor) n = o.constructor.name;\n            if (n === \"Map\" || n === \"Set\") return Array.from(o);\n            if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n          }\n\n          function _arrayLikeToArray(arr, len) {\n            if (len == null || len > arr.length) len = arr.length;\n\n            for (var i = 0, arr2 = new Array(len); i < len; i++) {\n              arr2[i] = arr[i];\n            }\n\n            return arr2;\n          }\n\n          function _iterableToArrayLimit(arr, i) {\n            if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n            var _arr = [];\n            var _n = true;\n            var _d = false;\n            var _e = undefined;\n\n            try {\n              for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n                _arr.push(_s.value);\n\n                if (i && _arr.length === i) break;\n              }\n            } catch (err) {\n              _d = true;\n              _e = err;\n            } finally {\n              try {\n                if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n              } finally {\n                if (_d) throw _e;\n              }\n            }\n\n            return _arr;\n          }\n\n          function _arrayWithHoles(arr) {\n            if (Array.isArray(arr)) return arr;\n          }\n\n          var StoreContext = (0, external_react_.createContext)(null);\n\n          var StoreProvider = function StoreProvider(props) {\n            var store = (0, external_react_.useMemo)(function () {\n              return createStore(function () {\n                return {\n                  screens: {},\n                  screenInstances: [],\n                  screenInstancePtr: -1,\n                  screenInstanceOptions: {},\n                  screenInstancePromises: {},\n                  screenEdge: {\n                    startX: null,\n                    startTime: null\n                  }\n                };\n              });\n            }, []);\n            return /*#__PURE__*/external_react_default().createElement(StoreContext.Provider, {\n              value: store\n            }, props.children);\n          };\n\n          function useStore() {\n            return (0, external_react_.useContext)(StoreContext);\n          }\n\n          function useStoreSelector(selector) {\n            var store = useStore();\n\n            var _useState = (0, external_react_.useState)(function () {\n              return selector(store.getState());\n            }),\n                _useState2 = _slicedToArray(_useState, 2),\n                value = _useState2[0],\n                setValue = _useState2[1];\n\n            (0, external_react_.useEffect)(function () {\n              var fn = function fn(prevState, nextState) {\n                var prevValue = prevState && selector(prevState);\n                var nextValue = selector(nextState);\n\n                if (prevValue && !external_react_fast_compare_default()(prevValue, nextValue) || !external_react_fast_compare_default()(value, nextValue)) {\n                  setValue(nextValue);\n                }\n              };\n\n              fn(null, store.getState());\n              var dispose = store.listen(fn, true);\n              return function () {\n                dispose();\n              };\n            }, [store, selector, setValue]);\n            return value;\n          }\n\n          function useStoreActions() {\n            var store = useStore();\n            var addScreen = (0, external_react_.useCallback)(function (_ref) {\n              var screen = _ref.screen;\n              store.setState(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  screens: _objectSpread(_objectSpread({}, prevState.screens), {}, _defineProperty({}, screen.id, screen))\n                });\n              });\n            }, [store]);\n            var removeScreen = (0, external_react_.useCallback)(function (_ref2) {\n              var screenId = _ref2.screenId;\n              store.setState(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  screens: _objectSpread(_objectSpread({}, prevState.screens), {}, _defineProperty({}, screenId, undefined))\n                });\n              });\n            }, [store]);\n            var addScreenInstanceOption = (0, external_react_.useCallback)(function (_ref3) {\n              var screenInstanceId = _ref3.screenInstanceId,\n                  screenInstanceOption = _ref3.screenInstanceOption;\n              store.setState(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  screenInstanceOptions: _objectSpread(_objectSpread({}, prevState.screenInstanceOptions), {}, _defineProperty({}, screenInstanceId, screenInstanceOption))\n                });\n              });\n            }, [store]);\n            var addScreenInstancePromise = (0, external_react_.useCallback)(function (_ref4) {\n              var screenInstanceId = _ref4.screenInstanceId,\n                  screenInstancePromise = _ref4.screenInstancePromise;\n              store.setState(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  screenInstancePromises: _objectSpread(_objectSpread({}, prevState.screenInstancePromises), {}, _defineProperty({}, screenInstanceId, screenInstancePromise))\n                });\n              });\n            }, [store]);\n            var mapScreenInstance = (0, external_react_.useCallback)(function (_ref5) {\n              var ptr = _ref5.ptr,\n                  mapper = _ref5.mapper;\n              store.setState(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  screenInstances: prevState.screenInstances.map(function (si, i) {\n                    return i === ptr ? mapper(si) : si;\n                  })\n                });\n              });\n            }, [store]);\n            var insertScreenInstance = (0, external_react_.useCallback)(function (_ref6) {\n              var ptr = _ref6.ptr,\n                  screenInstance = _ref6.screenInstance;\n              store.setState(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  screenInstances: [].concat(_toConsumableArray(prevState.screenInstances.filter(function (_, i) {\n                    return i <= ptr;\n                  })), [_objectSpread(_objectSpread({}, screenInstance), {}, {\n                    nestedRouteCount: 0\n                  })])\n                });\n              });\n            }, [store]);\n            var increaseScreenInstancePtr = (0, external_react_.useCallback)(function () {\n              store.setState(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  screenInstancePtr: prevState.screenInstancePtr + 1\n                });\n              });\n            }, [store]);\n            var setScreenInstancePtr = (0, external_react_.useCallback)(function (_ref7) {\n              var ptr = _ref7.ptr;\n              store.setState(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  screenInstancePtr: ptr\n                });\n              });\n            }, [store]);\n            var setScreenEdge = (0, external_react_.useCallback)(function (_ref8) {\n              var screenEdge = _ref8.screenEdge;\n              store.setState(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  screenEdge: screenEdge\n                });\n              });\n            }, [store]);\n            return (0, external_react_.useMemo)(function () {\n              return {\n                addScreen: addScreen,\n                removeScreen: removeScreen,\n                addScreenInstanceOption: addScreenInstanceOption,\n                addScreenInstancePromise: addScreenInstancePromise,\n                mapScreenInstance: mapScreenInstance,\n                insertScreenInstance: insertScreenInstance,\n                increaseScreenInstancePtr: increaseScreenInstancePtr,\n                setScreenInstancePtr: setScreenInstancePtr,\n                setScreenEdge: setScreenEdge\n              };\n            }, [addScreen, removeScreen, addScreenInstanceOption, addScreenInstancePromise, mapScreenInstance, insertScreenInstance, increaseScreenInstancePtr, setScreenInstancePtr, setScreenEdge]);\n          }\n\n          ; // CONCATENATED MODULE: ./src/navigator/helpers/getNavigatorParams.ts\n\n          var NavigatorParamKeys = Object.freeze({\n            screenInstanceId: '_si',\n            present: '_present'\n          });\n\n          function getNavigatorParams(searchParams) {\n            return {\n              screenInstanceId: searchParams.get(NavigatorParamKeys.screenInstanceId),\n              present: searchParams.get(NavigatorParamKeys.present) === 'true'\n            };\n          }\n\n          ; // CONCATENATED MODULE: ./src/navigator/helpers/index.ts\n\n          ; // CONCATENATED MODULE: ./src/navigator/hooks/useHistoryEffect.ts\n\n          function useHistoryPopEffect(callbacks, deps) {\n            var history = (0, external_react_router_dom_.useHistory)();\n            var location = (0, external_react_router_dom_.useLocation)();\n            var locationKeyStack = (0, external_react_.useRef)([]);\n            (0, external_react_.useEffect)(function () {\n              if (locationKeyStack.current.length > 0 || !location.search) {\n                return;\n              }\n\n              var searchParams = new URLSearchParams(location.search);\n\n              var _getNavigatorParams = getNavigatorParams(searchParams),\n                  screenInstanceId = _getNavigatorParams.screenInstanceId;\n\n              if (!screenInstanceId) {\n                return;\n              }\n\n              locationKeyStack.current = [location.pathname + location.search];\n            }, [location.search]);\n            (0, external_react_.useEffect)(function () {\n              return history.listen(function (location, action) {\n                var locationKey = location.pathname + location.search;\n\n                switch (action) {\n                  case 'PUSH':\n                    {\n                      if (locationKeyStack.current[locationKeyStack.current.length - 1] !== locationKey) {\n                        locationKeyStack.current.push(locationKey);\n                      }\n\n                      break;\n                    }\n\n                  case 'REPLACE':\n                    {\n                      locationKeyStack.current[locationKeyStack.current.length - 1] = locationKey;\n                      break;\n                    }\n\n                  case 'POP':\n                    {\n                      var ptr = locationKeyStack.current.findIndex(function (key) {\n                        return key === locationKey;\n                      });\n\n                      if (ptr > -1) {\n                        var _callbacks$backward;\n\n                        var _depth = locationKeyStack.current.length - ptr;\n\n                        locationKeyStack.current = locationKeyStack.current.filter(function (_, idx) {\n                          return idx <= ptr;\n                        });\n                        (_callbacks$backward = callbacks.backward) === null || _callbacks$backward === void 0 ? void 0 : _callbacks$backward.call(callbacks, location, action, _depth);\n                      } else {\n                        var _callbacks$forward;\n\n                        locationKeyStack.current.push(locationKey);\n                        (_callbacks$forward = callbacks.forward) === null || _callbacks$forward === void 0 ? void 0 : _callbacks$forward.call(callbacks, location, action);\n                      }\n                    }\n                }\n              });\n            }, deps);\n          }\n\n          function useHistoryPushEffect(callback, deps) {\n            var history = (0, external_react_router_dom_.useHistory)();\n            var location = (0, external_react_router_dom_.useLocation)();\n            var locationKeyStack = (0, external_react_.useRef)([]);\n            (0, external_react_.useEffect)(function () {\n              locationKeyStack.current = [location.pathname + location.search];\n            }, []);\n            (0, external_react_.useEffect)(function () {\n              return history.listen(function (location, action) {\n                var locationKey = location.pathname + location.search;\n\n                switch (action) {\n                  case 'PUSH':\n                    {\n                      if (locationKeyStack.current[locationKeyStack.current.length - 1] !== locationKey) {\n                        locationKeyStack.current.push(locationKey);\n                        callback(location, action);\n                      }\n\n                      break;\n                    }\n\n                  case 'REPLACE':\n                    {\n                      locationKeyStack.current[locationKeyStack.current.length - 1] = locationKey;\n                      break;\n                    }\n\n                  case 'POP':\n                    {\n                      var ptr = locationKeyStack.current.findIndex(function (key) {\n                        return key === locationKey;\n                      });\n\n                      if (ptr > -1) {\n                        locationKeyStack.current = locationKeyStack.current.filter(function (_, idx) {\n                          return idx <= ptr;\n                        });\n                      } else {\n                        locationKeyStack.current.push(locationKey);\n                      }\n                    }\n                }\n              });\n            }, deps);\n          }\n\n          function useHistoryReplaceEffect(callback, deps) {\n            var history = (0, external_react_router_dom_.useHistory)();\n            (0, external_react_.useEffect)(function () {\n              return history.listen(function (location, action) {\n                if (action === 'REPLACE') {\n                  callback(location, action);\n                }\n              });\n            }, deps);\n          }\n\n          ; // CONCATENATED MODULE: ./src/navigator/hooks/useUniqueId.tsx\n\n          var UniqueIdContext = (0, external_react_.createContext)(null);\n\n          var UniqueIdProvider = function UniqueIdProvider(props) {\n            var counterRef = (0, external_react_.useRef)(0);\n            return /*#__PURE__*/external_react_default().createElement(UniqueIdContext.Provider, {\n              value: counterRef\n            }, props.children);\n          };\n\n          function useUniqueId() {\n            var counterRef = (0, external_react_.useContext)(UniqueIdContext);\n            var uid = (0, external_react_.useCallback)(function () {\n              counterRef.current += 1;\n              return String(counterRef.current);\n            }, [counterRef]);\n            return (0, external_react_.useMemo)(function () {\n              return {\n                uid: uid\n              };\n            }, [uid]);\n          }\n\n          ; // CONCATENATED MODULE: ./src/navigator/hooks/index.ts\n\n          ; // CONCATENATED MODULE: ./src/navigator/useNavigator.ts\n\n          function useNavigator() {\n            var history = (0, external_react_router_dom_.useHistory)();\n            var location = (0, external_react_router_dom_.useLocation)();\n            var screenInfo = useScreenInstanceInfo();\n\n            var _useUniqueId = useUniqueId(),\n                uid = _useUniqueId.uid;\n\n            var store = useStore();\n\n            var _useStoreActions = useStoreActions(),\n                addScreenInstancePromise = _useStoreActions.addScreenInstancePromise;\n\n            var searchParams = new URLSearchParams(location.search);\n\n            var _getNavigatorParams = getNavigatorParams(searchParams),\n                present = _getNavigatorParams.present,\n                screenInstanceId = _getNavigatorParams.screenInstanceId;\n\n            var push = (0, external_react_.useCallback)(function (to, options) {\n              return new Promise(function (resolve) {\n                var _URL = new URL(to,\n                /* dummy */\n                'file://'),\n                    pathname = _URL.pathname,\n                    searchParams = _URL.searchParams;\n\n                searchParams.set(NavigatorParamKeys.screenInstanceId, uid());\n\n                if (options !== null && options !== void 0 && options.present) {\n                  searchParams.set(NavigatorParamKeys.present, 'true');\n                }\n\n                addScreenInstancePromise({\n                  screenInstanceId: screenInfo.screenInstanceId,\n                  screenInstancePromise: {\n                    resolve: resolve,\n                    popped: false\n                  }\n                });\n                history.push(\"\".concat(pathname, \"?\").concat(searchParams.toString()));\n              });\n            }, [screenInfo, history]);\n            var replace = (0, external_react_.useCallback)(function (to, options) {\n              var _URL2 = new URL(to,\n              /* dummy */\n              'file://'),\n                  pathname = _URL2.pathname,\n                  searchParams = _URL2.searchParams;\n\n              if (options !== null && options !== void 0 && options.animate) {\n                searchParams.set(NavigatorParamKeys.screenInstanceId, uid());\n              } else {\n                if (screenInstanceId) {\n                  searchParams.set(NavigatorParamKeys.screenInstanceId, screenInstanceId);\n                }\n\n                if (present) {\n                  searchParams.set(NavigatorParamKeys.present, 'true');\n                }\n              }\n\n              history.replace(\"\".concat(pathname, \"?\").concat(searchParams.toString()));\n            }, [history, screenInstanceId, present]);\n            var pop = (0, external_react_.useCallback)(function () {\n              var depth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n              var _store$getState = store.getState(),\n                  screenInstances = _store$getState.screenInstances,\n                  screenInstancePtr = _store$getState.screenInstancePtr,\n                  screenInstancePromises = _store$getState.screenInstancePromises;\n\n              var targetScreenInstance = screenInstances[screenInstancePtr - depth];\n              var backwardCount = screenInstances.filter(function (_, idx) {\n                return idx > screenInstancePtr - depth && idx <= screenInstancePtr;\n              }).map(function (screenInstance) {\n                return screenInstance.nestedRouteCount;\n              }).reduce(function (acc, current) {\n                return acc + current + 1;\n              }, 0);\n              var targetPromise = targetScreenInstance && screenInstancePromises[targetScreenInstance.id];\n              var _data = null;\n              var dispose = history.listen(function () {\n                dispose();\n\n                if (targetScreenInstance) {\n                  var _data2;\n\n                  targetPromise === null || targetPromise === void 0 ? void 0 : targetPromise.resolve((_data2 = _data) !== null && _data2 !== void 0 ? _data2 : null);\n                }\n              });\n              /**\n               * Send data to `await push()`\n               */\n\n              function send(\n              /**\n               * Payload\n               */\n              data) {\n                _data = data;\n\n                if (targetPromise) {\n                  targetPromise.popped = true;\n                }\n              }\n\n              Promise.resolve().then(function () {\n                history.go(-backwardCount);\n              });\n              return {\n                send: send\n              };\n            }, [history]);\n            return (0, external_react_.useMemo)(function () {\n              return {\n                push: push,\n                replace: replace,\n                pop: pop\n              };\n            }, [push, replace, pop]);\n          }\n\n          ; // CONCATENATED MODULE: ./src/navigator/components/Card.scss\n          // extracted by mini-css-extract-plugin\n\n          /* harmony default export */\n\n          const components_Card = {\n            \"cardDim\": \"kf-1Dlge\",\n            \"isNavbarVisible\": \"kf-1uMCR\",\n            \"isPresent\": \"kf-1gXS3\",\n            \"cardMainOffset\": \"kf-3fn0s\",\n            \"isNotTop\": \"kf-2d7n7\",\n            \"cardMain\": \"kf-1-WR3\",\n            \"isRoot\": \"kf-1f-AW\",\n            \"cardFrameOffset\": \"kf-373mp\",\n            \"cardFrame\": \"kf-SlqYE\",\n            \"isNotRoot\": \"kf-2Xv7E\",\n            \"cardEdge\": \"kf-osuJc\",\n            \"isNavbarNotVisible\": \"kf-3ZA-l\",\n            \"cardTransitionNode\": \"kf-3Rnfn\",\n            \"isNotPresent\": \"kf-24jIi\"\n          };\n          ; // CONCATENATED MODULE: ./src/navigator/assets/IconBack.tsx\n\n          var IconBack = function IconBack() {\n            return /*#__PURE__*/external_react_default().createElement(\"svg\", {\n              width: \"24\",\n              height: \"24\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              xmlns: \"http://www.w3.org/2000/svg\"\n            }, /*#__PURE__*/external_react_default().createElement(\"path\", {\n              d: \"M11.5659 5.56564C11.8783 5.25322 11.8783 4.74669 11.5659 4.43427C11.2535 4.12185 10.7469 4.12185 10.4345 4.43427L3.43451 11.4343C3.12209 11.7467 3.12209 12.2532 3.43451 12.5656L10.4345 19.5656C10.7469 19.8781 11.2535 19.8781 11.5659 19.5656C11.8783 19.2532 11.8783 18.7467 11.5659 18.4343L5.93157 12.8H20.0002C20.442 12.8 20.8002 12.4418 20.8002 12C20.8002 11.5581 20.442 11.2 20.0002 11.2H5.93157L11.5659 5.56564Z\",\n              fill: \"currentColor\"\n            }));\n          };\n          /* harmony default export */\n\n\n          const assets_IconBack = IconBack;\n          ; // CONCATENATED MODULE: ./src/navigator/assets/IconClose.tsx\n\n          var IconClose = function IconClose() {\n            return /*#__PURE__*/external_react_default().createElement(\"svg\", {\n              width: \"24\",\n              height: \"24\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              xmlns: \"http://www.w3.org/2000/svg\"\n            }, /*#__PURE__*/external_react_default().createElement(\"path\", {\n              d: \"M6.56588 5.43433C6.25346 5.12191 5.74693 5.12191 5.43451 5.43433C5.12209 5.74675 5.12209 6.25328 5.43451 6.5657L10.8688 12L5.43451 17.4343C5.12209 17.7467 5.12209 18.2533 5.43451 18.5657C5.74693 18.8781 6.25346 18.8781 6.56588 18.5657L12.0002 13.1314L17.4345 18.5657C17.7469 18.8781 18.2535 18.8781 18.5659 18.5657C18.8783 18.2533 18.8783 17.7467 18.5659 17.4343L13.1316 12L18.5659 6.5657C18.8783 6.25328 18.8783 5.74675 18.5659 5.43433C18.2535 5.12191 17.7469 5.12191 17.4345 5.43433L12.0002 10.8686L6.56588 5.43433Z\",\n              fill: \"currentColor\"\n            }), /*#__PURE__*/external_react_default().createElement(\"path\", {\n              d: \"M6.56588 5.43433C6.25346 5.12191 5.74693 5.12191 5.43451 5.43433C5.12209 5.74675 5.12209 6.25328 5.43451 6.5657L10.8688 12L5.43451 17.4343C5.12209 17.7467 5.12209 18.2533 5.43451 18.5657C5.74693 18.8781 6.25346 18.8781 6.56588 18.5657L12.0002 13.1314L17.4345 18.5657C17.7469 18.8781 18.2535 18.8781 18.5659 18.5657C18.8783 18.2533 18.8783 17.7467 18.5659 17.4343L13.1316 12L18.5659 6.5657C18.8783 6.25328 18.8783 5.74675 18.5659 5.43433C18.2535 5.12191 17.7469 5.12191 17.4345 5.43433L12.0002 10.8686L6.56588 5.43433Z\",\n              fill: \"currentColor\"\n            }));\n          };\n          /* harmony default export */\n\n\n          const assets_IconClose = IconClose;\n          ; // CONCATENATED MODULE: ./src/navigator/assets/index.ts\n\n          ; // CONCATENATED MODULE: ./src/navigator/components/Navbar.scss\n          // extracted by mini-css-extract-plugin\n\n          /* harmony default export */\n\n          const components_Navbar = {\n            \"navbar\": \"kf-3Jmg5\",\n            \"navbarMain\": \"kf-2uFk2\",\n            \"noBorder\": \"kf-2cWV9\",\n            \"navbarFlex\": \"kf-2rYDY\",\n            \"navbarLeft\": \"kf-2zSD_\",\n            \"navbarBack\": \"kf-PIEEh\",\n            \"navbarCenter\": \"kf-6ERVe\",\n            \"navbarCenterMain\": \"kf-1VG6K\",\n            \"isLeft\": \"kf-JC-xO\",\n            \"navbarCenterMainText\": \"kf-2CmRa\",\n            \"navbarCenterMainEdge\": \"kf-T2bcn\",\n            \"navbarRight\": \"kf-1fEQ5\",\n            \"navbarClose\": \"kf-hDBIq\"\n          };\n          ; // CONCATENATED MODULE: ./src/navigator/components/Navbar.tsx\n\n          function Navbar_defineProperty(obj, key, value) {\n            if (key in obj) {\n              Object.defineProperty(obj, key, {\n                value: value,\n                enumerable: true,\n                configurable: true,\n                writable: true\n              });\n            } else {\n              obj[key] = value;\n            }\n\n            return obj;\n          }\n\n          function Navbar_slicedToArray(arr, i) {\n            return Navbar_arrayWithHoles(arr) || Navbar_iterableToArrayLimit(arr, i) || Navbar_unsupportedIterableToArray(arr, i) || Navbar_nonIterableRest();\n          }\n\n          function Navbar_nonIterableRest() {\n            throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n          }\n\n          function Navbar_unsupportedIterableToArray(o, minLen) {\n            if (!o) return;\n            if (typeof o === \"string\") return Navbar_arrayLikeToArray(o, minLen);\n            var n = Object.prototype.toString.call(o).slice(8, -1);\n            if (n === \"Object\" && o.constructor) n = o.constructor.name;\n            if (n === \"Map\" || n === \"Set\") return Array.from(o);\n            if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Navbar_arrayLikeToArray(o, minLen);\n          }\n\n          function Navbar_arrayLikeToArray(arr, len) {\n            if (len == null || len > arr.length) len = arr.length;\n\n            for (var i = 0, arr2 = new Array(len); i < len; i++) {\n              arr2[i] = arr[i];\n            }\n\n            return arr2;\n          }\n\n          function Navbar_iterableToArrayLimit(arr, i) {\n            if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n            var _arr = [];\n            var _n = true;\n            var _d = false;\n            var _e = undefined;\n\n            try {\n              for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n                _arr.push(_s.value);\n\n                if (i && _arr.length === i) break;\n              }\n            } catch (err) {\n              _d = true;\n              _e = err;\n            } finally {\n              try {\n                if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n              } finally {\n                if (_d) throw _e;\n              }\n            }\n\n            return _arr;\n          }\n\n          function Navbar_arrayWithHoles(arr) {\n            if (Array.isArray(arr)) return arr;\n          }\n\n          var Navbar = function Navbar(props) {\n            var _useNavigator = useNavigator(),\n                pop = _useNavigator.pop;\n\n            var navigatorOptions = useNavigatorOptions();\n            var screenInstanceOptions = useStoreSelector(function (state) {\n              return state.screenInstanceOptions;\n            });\n\n            var _useState = (0, external_react_.useState)(undefined),\n                _useState2 = Navbar_slicedToArray(_useState, 2),\n                centerMainWidth = _useState2[0],\n                setCenterMainWidth = _useState2[1];\n\n            var navbarRef = (0, external_react_.useRef)(null);\n            var centerRef = (0, external_react_.useRef)(null);\n            var screenInstanceOption = screenInstanceOptions[props.screenInstanceId];\n            (0, external_react_.useLayoutEffect)(function () {\n              var onResize = function onResize() {\n                if (!navbarRef.current || !centerRef.current) {\n                  return;\n                }\n\n                var screenWidth = navbarRef.current.clientWidth;\n                var _centerRef$current = centerRef.current,\n                    leftWidth = _centerRef$current.offsetLeft,\n                    centerWidth = _centerRef$current.clientWidth;\n                var rightWidth = screenWidth - leftWidth - centerWidth;\n                var sideMargin = Math.max(leftWidth, rightWidth);\n                setCenterMainWidth(screenWidth - 2 * sideMargin + 'px');\n              };\n\n              if (props.theme === 'Cupertino') {\n                onResize();\n                window.addEventListener('resize', onResize);\n                return function () {\n                  window.removeEventListener('resize', onResize);\n                };\n              }\n            }, [screenInstanceOption]);\n\n            var onBackClick = function onBackClick() {\n              pop();\n            };\n\n            var closeButton = props.onClose && props.isRoot && (screenInstanceOption !== null && screenInstanceOption !== void 0 && screenInstanceOption.navbar.customCloseButton ? /*#__PURE__*/external_react_default().createElement(\"a\", {\n              role: \"text\",\n              \"aria-label\": \"\\uB2EB\\uAE30\",\n              className: components_Navbar.navbarClose,\n              onClick: props.onClose\n            }, screenInstanceOption.navbar.customCloseButton) : /*#__PURE__*/external_react_default().createElement(\"a\", {\n              role: \"text\",\n              \"aria-label\": \"\\uB2EB\\uAE30\",\n              className: components_Navbar.navbarClose,\n              onClick: props.onClose\n            }, /*#__PURE__*/external_react_default().createElement(assets_IconClose, null)));\n            var backButton = !props.isRoot && (screenInstanceOption !== null && screenInstanceOption !== void 0 && screenInstanceOption.navbar.customBackButton ? /*#__PURE__*/external_react_default().createElement(\"a\", {\n              role: \"text\",\n              \"aria-label\": \"\\uB4A4\\uB85C\\uAC00\\uAE30\",\n              className: components_Navbar.navbarBack,\n              onClick: onBackClick\n            }, screenInstanceOption.navbar.customBackButton) : /*#__PURE__*/external_react_default().createElement(\"a\", {\n              role: \"text\",\n              \"aria-label\": \"\\uB4A4\\uB85C\\uAC00\\uAE30\",\n              className: components_Navbar.navbarBack,\n              onClick: onBackClick\n            }, navigatorOptions.theme === 'Cupertino' && props.isPresent ? /*#__PURE__*/external_react_default().createElement(assets_IconClose, null) : /*#__PURE__*/external_react_default().createElement(assets_IconBack, null)));\n            var isLeft = !!((screenInstanceOption === null || screenInstanceOption === void 0 ? void 0 : screenInstanceOption.navbar.closeButtonLocation) === 'left' && closeButton || backButton || screenInstanceOption !== null && screenInstanceOption !== void 0 && screenInstanceOption.navbar.appendLeft);\n            var noBorder = screenInstanceOption === null || screenInstanceOption === void 0 ? void 0 : screenInstanceOption.navbar.noBorder;\n            return /*#__PURE__*/external_react_default().createElement(\"div\", {\n              ref: navbarRef,\n              className: external_clsx_default()('kf-navbar', components_Navbar.navbar)\n            }, /*#__PURE__*/external_react_default().createElement(\"div\", {\n              className: external_clsx_default()(components_Navbar.navbarMain, Navbar_defineProperty({}, components_Navbar.noBorder, noBorder))\n            }, /*#__PURE__*/external_react_default().createElement(\"div\", {\n              className: components_Navbar.navbarFlex\n            }, /*#__PURE__*/external_react_default().createElement(\"div\", {\n              className: components_Navbar.navbarLeft\n            }, (screenInstanceOption === null || screenInstanceOption === void 0 ? void 0 : screenInstanceOption.navbar.closeButtonLocation) === 'left' && closeButton, backButton, screenInstanceOption === null || screenInstanceOption === void 0 ? void 0 : screenInstanceOption.navbar.appendLeft), /*#__PURE__*/external_react_default().createElement(\"div\", {\n              ref: centerRef,\n              className: components_Navbar.navbarCenter\n            }, /*#__PURE__*/external_react_default().createElement(\"div\", {\n              className: external_clsx_default()(components_Navbar.navbarCenterMain, Navbar_defineProperty({}, components_Navbar.isLeft, isLeft)),\n              style: {\n                width: centerMainWidth\n              }\n            }, typeof (screenInstanceOption === null || screenInstanceOption === void 0 ? void 0 : screenInstanceOption.navbar.title) === 'string' ? /*#__PURE__*/external_react_default().createElement(\"div\", {\n              className: components_Navbar.navbarCenterMainText\n            }, screenInstanceOption === null || screenInstanceOption === void 0 ? void 0 : screenInstanceOption.navbar.title) : screenInstanceOption === null || screenInstanceOption === void 0 ? void 0 : screenInstanceOption.navbar.title), /*#__PURE__*/external_react_default().createElement(\"div\", {\n              className: components_Navbar.navbarCenterMainEdge,\n              style: {\n                width: centerMainWidth\n              },\n              onClick: props.onTopClick\n            })), /*#__PURE__*/external_react_default().createElement(\"div\", {\n              className: components_Navbar.navbarRight\n            }, screenInstanceOption === null || screenInstanceOption === void 0 ? void 0 : screenInstanceOption.navbar.appendRight, (screenInstanceOption === null || screenInstanceOption === void 0 ? void 0 : screenInstanceOption.navbar.closeButtonLocation) === 'right' && closeButton))));\n          };\n          /* harmony default export */\n\n\n          const navigator_components_Navbar = Navbar;\n          ; // CONCATENATED MODULE: ./src/navigator/components/Card.tsx\n\n          function Card_defineProperty(obj, key, value) {\n            if (key in obj) {\n              Object.defineProperty(obj, key, {\n                value: value,\n                enumerable: true,\n                configurable: true,\n                writable: true\n              });\n            } else {\n              obj[key] = value;\n            }\n\n            return obj;\n          }\n\n          function Card_slicedToArray(arr, i) {\n            return Card_arrayWithHoles(arr) || Card_iterableToArrayLimit(arr, i) || Card_unsupportedIterableToArray(arr, i) || Card_nonIterableRest();\n          }\n\n          function Card_nonIterableRest() {\n            throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n          }\n\n          function Card_unsupportedIterableToArray(o, minLen) {\n            if (!o) return;\n            if (typeof o === \"string\") return Card_arrayLikeToArray(o, minLen);\n            var n = Object.prototype.toString.call(o).slice(8, -1);\n            if (n === \"Object\" && o.constructor) n = o.constructor.name;\n            if (n === \"Map\" || n === \"Set\") return Array.from(o);\n            if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Card_arrayLikeToArray(o, minLen);\n          }\n\n          function Card_arrayLikeToArray(arr, len) {\n            if (len == null || len > arr.length) len = arr.length;\n\n            for (var i = 0, arr2 = new Array(len); i < len; i++) {\n              arr2[i] = arr[i];\n            }\n\n            return arr2;\n          }\n\n          function Card_iterableToArrayLimit(arr, i) {\n            if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n            var _arr = [];\n            var _n = true;\n            var _d = false;\n            var _e = undefined;\n\n            try {\n              for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n                _arr.push(_s.value);\n\n                if (i && _arr.length === i) break;\n              }\n            } catch (err) {\n              _d = true;\n              _e = err;\n            } finally {\n              try {\n                if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n              } finally {\n                if (_d) throw _e;\n              }\n            }\n\n            return _arr;\n          }\n\n          function Card_arrayWithHoles(arr) {\n            if (Array.isArray(arr)) return arr;\n          }\n\n          var $frameOffsetSet = new Set();\n\n          var Card = function Card(props) {\n            var _screenInstanceOption, _classnames, _classnames2, _classnames4, _classnames6, _classnames7;\n\n            var navigator = useNavigator();\n            var navigatorOptions = useNavigatorOptions();\n\n            var _useState = (0, external_react_.useState)(false),\n                _useState2 = Card_slicedToArray(_useState, 2),\n                popped = _useState2[0],\n                setPopped = _useState2[1];\n\n            var store = useStore();\n\n            var _useStoreSelector = useStoreSelector(function (state) {\n              return {\n                screenEdge: state.screenEdge,\n                screenInstanceOptions: state.screenInstanceOptions\n              };\n            }),\n                screenEdge = _useStoreSelector.screenEdge,\n                screenInstanceOptions = _useStoreSelector.screenInstanceOptions;\n\n            var _useStoreActions = useStoreActions(),\n                setScreenEdge = _useStoreActions.setScreenEdge;\n\n            var x = (0, external_react_.useRef)(0);\n            var requestAnimationFrameLock = (0, external_react_.useRef)(false);\n            var dimRef = (0, external_react_.useRef)(null);\n            var frameRef = (0, external_react_.useRef)(null);\n            var frameOffsetRef = (0, external_react_.useRef)(null);\n            var isNavbarVisible = (_screenInstanceOption = screenInstanceOptions[props.screenInstanceId]) === null || _screenInstanceOption === void 0 ? void 0 : _screenInstanceOption.navbar.visible;\n            (0, external_react_.useEffect)(function () {\n              var $frameOffset = frameOffsetRef.current;\n\n              if ($frameOffset) {\n                $frameOffsetSet.add($frameOffset);\n                return function () {\n                  $frameOffsetSet.delete($frameOffset);\n                };\n              }\n            }, [frameOffsetRef.current]);\n            var onEdgeTouchStart = (0, external_react_.useCallback)(function (e) {\n              var _document$activeEleme, _document$activeEleme2;\n\n              ;\n              (_document$activeEleme = document.activeElement) === null || _document$activeEleme === void 0 ? void 0 : (_document$activeEleme2 = _document$activeEleme.blur) === null || _document$activeEleme2 === void 0 ? void 0 : _document$activeEleme2.call(_document$activeEleme);\n              setScreenEdge({\n                screenEdge: {\n                  startX: e.touches[0].clientX,\n                  startTime: Date.now()\n                }\n              });\n            }, []);\n            var onEdgeTouchMove = (0, external_react_.useCallback)(function (e) {\n              if (screenEdge.startX) {\n                x.current = e.touches[0].clientX;\n\n                if (!requestAnimationFrameLock.current) {\n                  requestAnimationFrameLock.current = true;\n                  requestAnimationFrame(function () {\n                    if (x.current > 0) {\n                      var computedEdgeX = x.current - screenEdge.startX;\n                      var $dim = dimRef.current;\n                      var $frame = frameRef.current;\n\n                      if (computedEdgeX >= 0) {\n                        if ($dim) {\n                          $dim.style.opacity = \"\".concat(1 - computedEdgeX / window.screen.width);\n                          $dim.style.transition = '0s';\n                        }\n\n                        if ($frame) {\n                          $frame.style.overflowY = 'hidden';\n                          $frame.style.transform = \"translateX(\".concat(computedEdgeX, \"px)\");\n                          $frame.style.transition = '0s';\n                        }\n\n                        $frameOffsetSet.forEach(function ($frameOffset) {\n                          if ($frameOffset !== frameOffsetRef.current) {\n                            $frameOffset.style.transform = \"translateX(-\".concat(5 - 5 * computedEdgeX / window.screen.width, \"rem)\");\n                            $frameOffset.style.transition = '0s';\n                          }\n                        });\n                      }\n                    }\n\n                    requestAnimationFrameLock.current = false;\n                  });\n                }\n              }\n            }, [screenEdge]);\n            var onEdgeTouchEnd = (0, external_react_.useCallback)(function () {\n              if (x.current) {\n                var velocity = x.current / (Date.now() - screenEdge.startTime);\n\n                if (velocity > 1 || x.current / window.screen.width > 0.4) {\n                  setPopped(true);\n                  navigator.pop();\n                }\n\n                setScreenEdge({\n                  screenEdge: {\n                    startX: null,\n                    startTime: null\n                  }\n                });\n                x.current = 0;\n                requestAnimationFrame(function () {\n                  var $dim = dimRef.current;\n                  var $frame = frameRef.current;\n\n                  if ($dim) {\n                    $dim.style.opacity = '';\n                    $dim.style.transition = \"opacity \".concat(navigatorOptions.animationDuration, \"ms\");\n                  }\n\n                  if ($frame) {\n                    $frame.style.overflowY = '';\n                    $frame.style.transform = '';\n                    $frame.style.transition = navigatorOptions.theme === 'Cupertino' ? \"transform \".concat(navigatorOptions.animationDuration, \"ms\") : '';\n                  }\n\n                  $frameOffsetSet.forEach(function ($frameOffset) {\n                    $frameOffset.style.transform = '';\n                    $frameOffset.style.transition = \"transform \".concat(navigatorOptions.animationDuration, \"ms\");\n                  });\n                });\n              }\n            }, [screenEdge]);\n            var onTopClick = (0, external_react_.useCallback)(function () {\n              var _screenInstanceOption2, _screenInstanceOption3;\n\n              var screenInstanceOption = store.getState().screenInstanceOptions[props.screenInstanceId];\n\n              if (!(screenInstanceOption !== null && screenInstanceOption !== void 0 && screenInstanceOption.navbar.disableScrollToTop) && frameRef.current) {\n                var scroller = external_zenscroll_default().createScroller(frameRef.current);\n                scroller.toY(0);\n              }\n\n              screenInstanceOption === null || screenInstanceOption === void 0 ? void 0 : (_screenInstanceOption2 = (_screenInstanceOption3 = screenInstanceOption.navbar).onTopClick) === null || _screenInstanceOption2 === void 0 ? void 0 : _screenInstanceOption2.call(_screenInstanceOption3);\n            }, []);\n            return /*#__PURE__*/external_react_default().createElement(\"div\", {\n              ref: props.nodeRef,\n              className: external_clsx_default()(components_Card.cardTransitionNode, (_classnames = {}, Card_defineProperty(_classnames, components_Card.isNotPresent, !props.isPresent), Card_defineProperty(_classnames, components_Card.isPresent, props.isPresent), _classnames))\n            }, !props.isRoot && /*#__PURE__*/external_react_default().createElement(\"div\", {\n              ref: dimRef,\n              className: external_clsx_default()(components_Card.cardDim, (_classnames2 = {}, Card_defineProperty(_classnames2, components_Card.isNavbarVisible, !!isNavbarVisible), Card_defineProperty(_classnames2, components_Card.isPresent, props.isPresent), _classnames2)),\n              style: {\n                transition: \"opacity \".concat(navigatorOptions.animationDuration, \"ms\")\n              }\n            }), /*#__PURE__*/external_react_default().createElement(\"div\", {\n              className: external_clsx_default()(components_Card.cardMainOffset, Card_defineProperty({}, components_Card.isNotTop, !props.isTop)),\n              style: {\n                transition: \"transform \".concat(navigatorOptions.animationDuration, \"ms\")\n              }\n            }, /*#__PURE__*/external_react_default().createElement(\"div\", {\n              className: external_clsx_default()(components_Card.cardMain, (_classnames4 = {}, Card_defineProperty(_classnames4, components_Card.isNavbarVisible, !!isNavbarVisible), Card_defineProperty(_classnames4, components_Card.isPresent, props.isPresent), Card_defineProperty(_classnames4, components_Card.isRoot, props.isRoot), _classnames4)),\n              style: {\n                transition: navigatorOptions.theme === 'Cupertino' && props.isPresent ? \"transform \".concat(navigatorOptions.animationDuration, \"ms\") : navigatorOptions.theme === 'Android' ? \"transform \".concat(navigatorOptions.animationDuration, \"ms, opacity \").concat(navigatorOptions.animationDuration, \"ms\") : undefined\n              }\n            }, !!isNavbarVisible && /*#__PURE__*/external_react_default().createElement(navigator_components_Navbar, {\n              screenInstanceId: props.screenInstanceId,\n              theme: navigatorOptions.theme,\n              isRoot: props.isRoot,\n              isPresent: props.isPresent,\n              onClose: props.onClose,\n              onTopClick: onTopClick\n            }), /*#__PURE__*/external_react_default().createElement(\"div\", {\n              ref: frameOffsetRef,\n              className: external_clsx_default()(components_Card.cardFrameOffset, Card_defineProperty({}, components_Card.isNotTop, !props.isTop)),\n              style: {\n                transition: \"transform \".concat(navigatorOptions.animationDuration, \"ms\")\n              }\n            }, /*#__PURE__*/external_react_default().createElement(\"div\", {\n              ref: frameRef,\n              className: external_clsx_default()('kf-frame', components_Card.cardFrame, (_classnames6 = {}, Card_defineProperty(_classnames6, components_Card.isNotRoot, !props.isRoot), Card_defineProperty(_classnames6, components_Card.isPresent, props.isPresent), _classnames6)),\n              style: {\n                transition: navigatorOptions.theme === 'Cupertino' ? \"transform \".concat(navigatorOptions.animationDuration, \"ms\") : undefined\n              }\n            }, props.children)), navigatorOptions.theme === 'Cupertino' && !props.isRoot && !props.isPresent && !popped && /*#__PURE__*/external_react_default().createElement(\"div\", {\n              className: external_clsx_default()(components_Card.cardEdge, (_classnames7 = {}, Card_defineProperty(_classnames7, components_Card.isNavbarNotVisible, !isNavbarVisible), Card_defineProperty(_classnames7, components_Card.isNavbarVisible, !!isNavbarVisible), _classnames7)),\n              onTouchStart: onEdgeTouchStart,\n              onTouchMove: onEdgeTouchMove,\n              onTouchEnd: onEdgeTouchEnd\n            }))));\n          };\n          /* harmony default export */\n\n\n          const navigator_components_Card = Card;\n          ; // CONCATENATED MODULE: ./src/navigator/components/index.ts\n\n          ; // CONCATENATED MODULE: ./src/navigator/Navigator.scss\n          // extracted by mini-css-extract-plugin\n\n          /* harmony default export */\n\n          const Navigator = {\n            \"navigatorRoot\": \"kf-p0r7I\"\n          };\n          ; // CONCATENATED MODULE: ./src/navigator/Navigator.tsx\n\n          function Navigator_ownKeys(object, enumerableOnly) {\n            var keys = Object.keys(object);\n\n            if (Object.getOwnPropertySymbols) {\n              var symbols = Object.getOwnPropertySymbols(object);\n              if (enumerableOnly) symbols = symbols.filter(function (sym) {\n                return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n              });\n              keys.push.apply(keys, symbols);\n            }\n\n            return keys;\n          }\n\n          function Navigator_objectSpread(target) {\n            for (var i = 1; i < arguments.length; i++) {\n              var source = arguments[i] != null ? arguments[i] : {};\n\n              if (i % 2) {\n                Navigator_ownKeys(Object(source), true).forEach(function (key) {\n                  Navigator_defineProperty(target, key, source[key]);\n                });\n              } else if (Object.getOwnPropertyDescriptors) {\n                Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n              } else {\n                Navigator_ownKeys(Object(source)).forEach(function (key) {\n                  Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n                });\n              }\n            }\n\n            return target;\n          }\n\n          function Navigator_defineProperty(obj, key, value) {\n            if (key in obj) {\n              Object.defineProperty(obj, key, {\n                value: value,\n                enumerable: true,\n                configurable: true,\n                writable: true\n              });\n            } else {\n              obj[key] = value;\n            }\n\n            return obj;\n          }\n\n          var DEFAULT_CUPERTINO_ANIMATION_DURATION = 350;\n          var DEFAULT_ANDROID_ANIMATION_DURATION = 270;\n\n          var Navigator_Navigator = function Navigator(props) {\n            var _props$theme, _props$animationDurat, _props$theme3;\n\n            var h = /*#__PURE__*/external_react_default().createElement(NavigatorOptionsProvider, {\n              value: {\n                theme: (_props$theme = props.theme) !== null && _props$theme !== void 0 ? _props$theme : 'Android',\n                animationDuration: (_props$animationDurat = props.animationDuration) !== null && _props$animationDurat !== void 0 ? _props$animationDurat : function () {\n                  var _props$theme2;\n\n                  switch ((_props$theme2 = props.theme) !== null && _props$theme2 !== void 0 ? _props$theme2 : 'Android') {\n                    case 'Cupertino':\n                      return DEFAULT_CUPERTINO_ANIMATION_DURATION;\n\n                    case 'Android':\n                      return DEFAULT_ANDROID_ANIMATION_DURATION;\n                  }\n                }()\n              }\n            }, /*#__PURE__*/external_react_default().createElement(UniqueIdProvider, null, /*#__PURE__*/external_react_default().createElement(StoreProvider, null, /*#__PURE__*/external_react_default().createElement(NavigatorScreens, {\n              theme: (_props$theme3 = props.theme) !== null && _props$theme3 !== void 0 ? _props$theme3 : 'Android',\n              onClose: props.onClose,\n              onDepthChange: props.onDepthChange\n            }, props.children))));\n\n            if (!props.useCustomRouter) {\n              h = /*#__PURE__*/external_react_default().createElement(external_react_router_dom_.HashRouter, null, h);\n            }\n\n            return h;\n          };\n\n          var NavigatorScreens = function NavigatorScreens(props) {\n            var location = (0, external_react_router_dom_.useLocation)();\n            var history = (0, external_react_router_dom_.useHistory)();\n\n            var _useUniqueId = useUniqueId(),\n                uid = _useUniqueId.uid;\n\n            var store = useStore();\n\n            var _useStoreSelector = useStoreSelector(function (state) {\n              return {\n                screenInstances: state.screenInstances,\n                screenInstancePtr: state.screenInstancePtr\n              };\n            }),\n                screenInstances = _useStoreSelector.screenInstances,\n                screenInstancePtr = _useStoreSelector.screenInstancePtr;\n\n            var _useStoreActions = useStoreActions(),\n                increaseScreenInstancePtr = _useStoreActions.increaseScreenInstancePtr,\n                insertScreenInstance = _useStoreActions.insertScreenInstance,\n                mapScreenInstance = _useStoreActions.mapScreenInstance,\n                setScreenInstancePtr = _useStoreActions.setScreenInstancePtr;\n\n            var pushScreen = (0, external_react_.useCallback)(function (_ref) {\n              var screenId = _ref.screenId,\n                  screenInstanceId = _ref.screenInstanceId,\n                  present = _ref.present,\n                  as = _ref.as;\n\n              var _store$getState = store.getState(),\n                  screenInstances = _store$getState.screenInstances,\n                  screenInstancePtr = _store$getState.screenInstancePtr;\n\n              var nextPtr = screenInstances.findIndex(function (screenInstance) {\n                return screenInstance.id === screenInstanceId;\n              });\n\n              if (nextPtr === -1) {\n                insertScreenInstance({\n                  ptr: screenInstancePtr,\n                  screenInstance: {\n                    id: screenInstanceId,\n                    screenId: screenId,\n                    present: present,\n                    as: as\n                  }\n                });\n                increaseScreenInstancePtr();\n              } else {\n                setScreenInstancePtr({\n                  ptr: nextPtr\n                });\n              }\n            }, []);\n            var replaceScreen = (0, external_react_.useCallback)(function (_ref2) {\n              var screenId = _ref2.screenId,\n                  screenInstanceId = _ref2.screenInstanceId,\n                  as = _ref2.as,\n                  present = _ref2.present;\n\n              var _store$getState2 = store.getState(),\n                  screenInstancePtr = _store$getState2.screenInstancePtr;\n\n              insertScreenInstance({\n                ptr: screenInstancePtr - 1,\n                screenInstance: {\n                  id: screenInstanceId,\n                  screenId: screenId,\n                  present: present,\n                  as: as\n                }\n              });\n            }, []);\n            var popScreen = (0, external_react_.useCallback)(function (_ref3) {\n              var depth = _ref3.depth,\n                  targetScreenInstanceId = _ref3.targetScreenInstanceId;\n\n              var _store$getState3 = store.getState(),\n                  screenInstancePromises = _store$getState3.screenInstancePromises,\n                  screenInstancePtr = _store$getState3.screenInstancePtr;\n\n              if (targetScreenInstanceId) {\n                var promise = screenInstancePromises[targetScreenInstanceId];\n\n                if (promise && !promise.popped) {\n                  promise.resolve(null);\n                }\n              }\n\n              setScreenInstancePtr({\n                ptr: screenInstancePtr - depth\n              });\n            }, []);\n            (0, external_react_.useEffect)(function () {\n              if (typeof window === 'undefined') {\n                return;\n              }\n\n              if (window.__KARROTFRAME__) {\n                throw new Error('한 개의 앱에는 한 개의 Navigator만 허용됩니다');\n              }\n\n              window.__KARROTFRAME__ = true;\n              var searchParams = new URLSearchParams(location.search);\n              searchParams.set(NavigatorParamKeys.screenInstanceId, uid());\n              history.replace(\"\".concat(location.pathname, \"?\").concat(searchParams.toString()));\n              return function () {\n                window.__KARROTFRAME__ = false;\n              };\n            }, []);\n            (0, external_react_.useEffect)(function () {\n              if (!location.search) {\n                return;\n              }\n\n              var _store$getState4 = store.getState(),\n                  screens = _store$getState4.screens,\n                  screenInstances = _store$getState4.screenInstances;\n\n              if (screenInstances.length > 0) {\n                return;\n              }\n\n              var searchParams = new URLSearchParams(location.search);\n\n              var _getNavigatorParams = getNavigatorParams(searchParams),\n                  screenInstanceId = _getNavigatorParams.screenInstanceId;\n\n              var matchScreen = Object.values(screens).find(function (screen) {\n                return screen && (0, external_react_router_dom_.matchPath)(location.pathname, {\n                  exact: true,\n                  path: screen.path\n                });\n              });\n\n              if (screenInstanceId && matchScreen) {\n                pushScreen({\n                  screenId: matchScreen.id,\n                  screenInstanceId: screenInstanceId,\n                  present: false,\n                  as: location.pathname\n                });\n              }\n            }, [location.search]);\n            (0, external_react_.useEffect)(function () {\n              return store.listen(function (prevState, nextState) {\n                if (nextState.screenInstancePtr > -1 && prevState.screenInstancePtr !== nextState.screenInstancePtr) {\n                  var _props$onDepthChange;\n\n                  (_props$onDepthChange = props.onDepthChange) === null || _props$onDepthChange === void 0 ? void 0 : _props$onDepthChange.call(props, nextState.screenInstancePtr);\n                }\n              });\n            }, [props.onDepthChange]);\n            useHistoryPushEffect(function (location) {\n              var _store$getState5 = store.getState(),\n                  screens = _store$getState5.screens,\n                  screenInstancePtr = _store$getState5.screenInstancePtr;\n\n              var searchParams = new URLSearchParams(location.search);\n\n              var _getNavigatorParams2 = getNavigatorParams(searchParams),\n                  screenInstanceId = _getNavigatorParams2.screenInstanceId,\n                  present = _getNavigatorParams2.present;\n\n              var matchScreen = Object.values(screens).find(function (screen) {\n                return !!screen && (0, external_react_router_dom_.matchPath)(location.pathname, {\n                  exact: true,\n                  path: screen.path\n                });\n              });\n\n              if (screenInstanceId && matchScreen) {\n                pushScreen({\n                  screenId: matchScreen.id,\n                  screenInstanceId: screenInstanceId,\n                  present: present,\n                  as: location.pathname\n                });\n              } else {\n                mapScreenInstance({\n                  ptr: screenInstancePtr,\n                  mapper: function mapper(screenInstance) {\n                    return Navigator_objectSpread(Navigator_objectSpread({}, screenInstance), {}, {\n                      nestedRouteCount: screenInstance.nestedRouteCount + 1\n                    });\n                  }\n                });\n              }\n            }, [pushScreen]);\n            useHistoryReplaceEffect(function (location) {\n              var _store$getState6 = store.getState(),\n                  screens = _store$getState6.screens;\n\n              var searchParams = new URLSearchParams(location.search);\n\n              var _getNavigatorParams3 = getNavigatorParams(searchParams),\n                  screenInstanceId = _getNavigatorParams3.screenInstanceId,\n                  present = _getNavigatorParams3.present;\n\n              var matchScreen = Object.values(screens).find(function (screen) {\n                return screen && (0, external_react_router_dom_.matchPath)(location.pathname, {\n                  exact: true,\n                  path: screen.path\n                });\n              });\n\n              if (screenInstanceId && matchScreen) {\n                replaceScreen({\n                  screenId: matchScreen.id,\n                  screenInstanceId: screenInstanceId,\n                  present: present,\n                  as: location.pathname\n                });\n              }\n            }, [replaceScreen]);\n            useHistoryPopEffect({\n              backward: function backward(location) {\n                var _screenInstances$scre;\n\n                var _store$getState7 = store.getState(),\n                    screens = _store$getState7.screens,\n                    screenInstances = _store$getState7.screenInstances,\n                    screenInstancePtr = _store$getState7.screenInstancePtr;\n\n                var matchScreen = Object.values(screens).find(function (screen) {\n                  return screen && (0, external_react_router_dom_.matchPath)(location.pathname, {\n                    exact: true,\n                    path: screen.path\n                  });\n                });\n                var searchParams = new URLSearchParams(location.search);\n\n                var _getNavigatorParams4 = getNavigatorParams(searchParams),\n                    screenInstanceId = _getNavigatorParams4.screenInstanceId;\n\n                if (screenInstanceId && matchScreen) {\n                  var nextPtr = screenInstances.findIndex(function (screenInstance) {\n                    return screenInstance.id === screenInstanceId;\n                  });\n                  mapScreenInstance({\n                    ptr: screenInstancePtr,\n                    mapper: function mapper(screenInstance) {\n                      return Navigator_objectSpread(Navigator_objectSpread({}, screenInstance), {}, {\n                        nestedRouteCount: 0\n                      });\n                    }\n                  });\n                  popScreen({\n                    depth: screenInstancePtr - nextPtr,\n                    targetScreenInstanceId: screenInstanceId\n                  });\n                } else if (((_screenInstances$scre = screenInstances[screenInstancePtr]) === null || _screenInstances$scre === void 0 ? void 0 : _screenInstances$scre.nestedRouteCount) === 0) {\n                  popScreen({\n                    depth: 1\n                  });\n                } else {\n                  mapScreenInstance({\n                    ptr: screenInstancePtr,\n                    mapper: function mapper(screenInstance) {\n                      return Navigator_objectSpread(Navigator_objectSpread({}, screenInstance), {}, {\n                        nestedRouteCount: screenInstance.nestedRouteCount - 1\n                      });\n                    }\n                  });\n                }\n              },\n              forward: function forward(location) {\n                var _store$getState8 = store.getState(),\n                    screens = _store$getState8.screens,\n                    screenInstancePtr = _store$getState8.screenInstancePtr;\n\n                var searchParams = new URLSearchParams(location.search);\n\n                var _getNavigatorParams5 = getNavigatorParams(searchParams),\n                    screenInstanceId = _getNavigatorParams5.screenInstanceId,\n                    present = _getNavigatorParams5.present;\n\n                var matchScreen = Object.values(screens).find(function (screen) {\n                  return screen && (0, external_react_router_dom_.matchPath)(location.pathname, {\n                    exact: true,\n                    path: screen.path\n                  });\n                });\n\n                if (screenInstanceId && matchScreen) {\n                  pushScreen({\n                    screenId: matchScreen.id,\n                    screenInstanceId: screenInstanceId,\n                    present: present,\n                    as: location.pathname\n                  });\n                } else {\n                  mapScreenInstance({\n                    ptr: screenInstancePtr,\n                    mapper: function mapper(screenInstance) {\n                      return Navigator_objectSpread(Navigator_objectSpread({}, screenInstance), {}, {\n                        nestedRouteCount: screenInstance.nestedRouteCount + 1\n                      });\n                    }\n                  });\n                }\n              }\n            }, [popScreen, pushScreen]);\n            return /*#__PURE__*/external_react_default().createElement(\"div\", {\n              className: external_clsx_default()(Navigator.navigatorRoot, {\n                'kf-android': props.theme === 'Android',\n                'kf-cupertino': props.theme === 'Cupertino'\n              })\n            }, props.children, /*#__PURE__*/external_react_default().createElement(external_react_transition_group_.TransitionGroup, {\n              component: null\n            }, screenInstances.map(function (screenInstance, index) {\n              return /*#__PURE__*/external_react_default().createElement(Transition, {\n                key: index,\n                screenInstance: screenInstance,\n                screenInstanceIndex: index,\n                isRoot: index === 0,\n                isTop: index === screenInstancePtr,\n                onClose: props.onClose\n              });\n            })));\n          };\n\n          var Transition = function Transition(props) {\n            var navigatorOptions = useNavigatorOptions();\n            var nodeRef = (0, external_react_.useRef)(null);\n\n            var _useStoreSelector2 = useStoreSelector(function (state) {\n              return {\n                screens: state.screens,\n                screenInstancePtr: state.screenInstancePtr,\n                screenInstances: state.screenInstances\n              };\n            }),\n                screens = _useStoreSelector2.screens,\n                screenInstancePtr = _useStoreSelector2.screenInstancePtr,\n                screenInstances = _useStoreSelector2.screenInstances;\n\n            var screen = screens[props.screenInstance.screenId];\n\n            if (!screen) {\n              return null;\n            }\n\n            return /*#__PURE__*/external_react_default().createElement(external_react_transition_group_.CSSTransition, {\n              key: props.screenInstance.id,\n              nodeRef: nodeRef,\n              timeout: navigatorOptions.animationDuration,\n              in: props.screenInstanceIndex <= screenInstancePtr,\n              unmountOnExit: true\n            }, /*#__PURE__*/external_react_default().createElement(navigator_components_Card, {\n              nodeRef: nodeRef,\n              screenPath: screen.path,\n              screenInstanceId: props.screenInstance.id,\n              isRoot: props.screenInstanceIndex === 0,\n              isTop: props.screenInstanceIndex >= screenInstancePtr || navigatorOptions.theme === 'Cupertino' && screenInstances.length > props.screenInstanceIndex + 1 && screenInstances[props.screenInstanceIndex + 1].present,\n              isPresent: props.screenInstance.present,\n              onClose: props.onClose\n            }, /*#__PURE__*/external_react_default().createElement(screen.Component, {\n              as: props.screenInstance.as,\n              screenInstanceId: props.screenInstance.id,\n              isTop: props.isTop,\n              isRoot: props.isRoot\n            })));\n          };\n          /* harmony default export */\n\n\n          const navigator_Navigator = Navigator_Navigator;\n          ; // CONCATENATED MODULE: ./src/navigator/Screen.tsx\n\n          var Screen = function Screen(props) {\n            var _Component = props.component;\n\n            var _useStoreActions = useStoreActions(),\n                addScreen = _useStoreActions.addScreen,\n                addScreenInstanceOption = _useStoreActions.addScreenInstanceOption,\n                removeScreen = _useStoreActions.removeScreen;\n\n            (0, external_react_.useEffect)(function () {\n              if (!props.children && !_Component) {\n                console.warn('component props, children 중 하나는 반드시 필요합니다');\n                return;\n              }\n\n              var screenId = props.path;\n              addScreen({\n                screen: {\n                  id: screenId,\n                  path: props.path,\n                  Component: function Component(_ref) {\n                    var screenInstanceId = _ref.screenInstanceId,\n                        isTop = _ref.isTop,\n                        isRoot = _ref.isRoot,\n                        as = _ref.as;\n\n                    var setNavbar = function setNavbar(navbar) {\n                      addScreenInstanceOption({\n                        screenInstanceId: screenInstanceId,\n                        screenInstanceOption: {\n                          navbar: navbar\n                        }\n                      });\n                    };\n\n                    return /*#__PURE__*/external_react_default().createElement(ScreenInstanceInfoProvider, {\n                      value: {\n                        screenInstanceId: screenInstanceId,\n                        as: as,\n                        path: props.path\n                      }\n                    }, /*#__PURE__*/external_react_default().createElement(ScreenInstanceOptionsProvider, {\n                      value: {\n                        setNavbar: setNavbar\n                      }\n                    }, _Component ? /*#__PURE__*/external_react_default().createElement(_Component, {\n                      isTop: isTop,\n                      isRoot: isRoot\n                    }) : props.children));\n                  }\n                }\n              });\n              return function () {\n                removeScreen({\n                  screenId: screenId\n                });\n              };\n            }, [props.path, _Component]);\n            return null;\n          };\n          /* harmony default export */\n\n\n          const navigator_Screen = Screen; // EXTERNAL MODULE: ./src/navigator/ScreenComponentProps.ts\n\n          var ScreenComponentProps = __webpack_require__(368);\n\n          ; // CONCATENATED MODULE: ./src/navigator/ScreenHelmet.tsx\n\n          var ScreenHelmet = function ScreenHelmet(props) {\n            var screen = useScreenInstanceOptions();\n            (0, external_react_.useEffect)(function () {\n              var _props$title, _props$appendLeft, _props$appendRight, _props$closeButtonLoc, _props$customBackButt, _props$customCloseBut, _props$disableScrollT, _props$noBorder;\n\n              screen.setNavbar({\n                visible: true,\n                title: (_props$title = props.title) !== null && _props$title !== void 0 ? _props$title : null,\n                appendLeft: (_props$appendLeft = props.appendLeft) !== null && _props$appendLeft !== void 0 ? _props$appendLeft : null,\n                appendRight: (_props$appendRight = props.appendRight) !== null && _props$appendRight !== void 0 ? _props$appendRight : null,\n                closeButtonLocation: (_props$closeButtonLoc = props.closeButtonLocation) !== null && _props$closeButtonLoc !== void 0 ? _props$closeButtonLoc : 'left',\n                customBackButton: (_props$customBackButt = props.customBackButton) !== null && _props$customBackButt !== void 0 ? _props$customBackButt : null,\n                customCloseButton: (_props$customCloseBut = props.customCloseButton) !== null && _props$customCloseBut !== void 0 ? _props$customCloseBut : null,\n                disableScrollToTop: (_props$disableScrollT = props.disableScrollToTop) !== null && _props$disableScrollT !== void 0 ? _props$disableScrollT : false,\n                noBorder: (_props$noBorder = props.noBorder) !== null && _props$noBorder !== void 0 ? _props$noBorder : false,\n                onTopClick: props.onTopClick\n              });\n            }, [props.title, props.appendLeft, props.appendRight, props.closeButtonLocation, props.customBackButton, props.customCloseButton, props.disableScrollToTop, props.noBorder, props.onTopClick]);\n            (0, external_react_.useEffect)(function () {\n              return function () {\n                screen.setNavbar({\n                  visible: false,\n                  title: null,\n                  appendLeft: null,\n                  appendRight: null,\n                  closeButtonLocation: 'left',\n                  customBackButton: null,\n                  customCloseButton: null,\n                  disableScrollToTop: false,\n                  noBorder: false,\n                  onTopClick: undefined\n                });\n              };\n            }, []);\n            return null;\n          };\n          /* harmony default export */\n\n\n          const navigator_ScreenHelmet = ScreenHelmet;\n          ; // CONCATENATED MODULE: ./src/navigator/useParams.ts\n\n          function useParams() {\n            var _useScreenInstanceInf = useScreenInstanceInfo(),\n                as = _useScreenInstanceInf.as,\n                path = _useScreenInstanceInf.path;\n\n            return (0, external_react_.useMemo)(function () {\n              var _matchPath$params, _matchPath;\n\n              return (_matchPath$params = (_matchPath = (0, external_react_router_dom_.matchPath)(as, path)) === null || _matchPath === void 0 ? void 0 : _matchPath.params) !== null && _matchPath$params !== void 0 ? _matchPath$params : {};\n            }, [as, path]);\n          }\n\n          ; // CONCATENATED MODULE: ./src/navigator/useQueryParams.ts\n\n          function useQueryParams_toConsumableArray(arr) {\n            return useQueryParams_arrayWithoutHoles(arr) || useQueryParams_iterableToArray(arr) || useQueryParams_unsupportedIterableToArray(arr) || useQueryParams_nonIterableSpread();\n          }\n\n          function useQueryParams_nonIterableSpread() {\n            throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n          }\n\n          function useQueryParams_unsupportedIterableToArray(o, minLen) {\n            if (!o) return;\n            if (typeof o === \"string\") return useQueryParams_arrayLikeToArray(o, minLen);\n            var n = Object.prototype.toString.call(o).slice(8, -1);\n            if (n === \"Object\" && o.constructor) n = o.constructor.name;\n            if (n === \"Map\" || n === \"Set\") return Array.from(o);\n            if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useQueryParams_arrayLikeToArray(o, minLen);\n          }\n\n          function useQueryParams_iterableToArray(iter) {\n            if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n          }\n\n          function useQueryParams_arrayWithoutHoles(arr) {\n            if (Array.isArray(arr)) return useQueryParams_arrayLikeToArray(arr);\n          }\n\n          function useQueryParams_arrayLikeToArray(arr, len) {\n            if (len == null || len > arr.length) len = arr.length;\n\n            for (var i = 0, arr2 = new Array(len); i < len; i++) {\n              arr2[i] = arr[i];\n            }\n\n            return arr2;\n          }\n\n          function useQueryParams(options) {\n            var ignoreNestedRoutes = !!(options !== null && options !== void 0 && options.ignoreNestedRoutes);\n            var location = (0, external_react_router_dom_.useLocation)();\n\n            var _useScreenInstanceInf = useScreenInstanceInfo(),\n                as = _useScreenInstanceInf.as;\n\n            var parse = (0, external_react_.useMemo)(function () {\n              var prevParams = {};\n              return function (_ref) {\n                var pathname = _ref.pathname,\n                    search = _ref.search;\n\n                if (pathname === as) {\n                  prevParams = Object.fromEntries(new URLSearchParams(search).entries());\n                }\n\n                return prevParams;\n              };\n            }, [as]);\n            var queryParams = (0, external_react_.useMemo)(function () {\n              return parse({\n                pathname: location.pathname,\n                search: location.search\n              });\n            }, [ignoreNestedRoutes].concat(useQueryParams_toConsumableArray(ignoreNestedRoutes ? [as] : [location.pathname, location.search])));\n            return queryParams;\n          }\n\n          ; // CONCATENATED MODULE: ./src/navigator/index.ts\n\n          /***/\n        },\n\n        /***/\n        536: module => {\n          \"use strict\";\n\n          module.exports = __WEBPACK_EXTERNAL_MODULE__536__;\n          /***/\n        },\n\n        /***/\n        297: module => {\n          \"use strict\";\n\n          module.exports = __WEBPACK_EXTERNAL_MODULE__297__;\n          /***/\n        },\n\n        /***/\n        53: module => {\n          \"use strict\";\n\n          module.exports = __WEBPACK_EXTERNAL_MODULE__53__;\n          /***/\n        },\n\n        /***/\n        146: module => {\n          \"use strict\";\n\n          module.exports = __WEBPACK_EXTERNAL_MODULE__146__;\n          /***/\n        },\n\n        /***/\n        810: module => {\n          \"use strict\";\n\n          module.exports = __WEBPACK_EXTERNAL_MODULE__810__;\n          /***/\n        },\n\n        /***/\n        148: module => {\n          \"use strict\";\n\n          module.exports = __WEBPACK_EXTERNAL_MODULE__148__;\n          /***/\n        }\n        /******/\n\n      };\n      /************************************************************************/\n\n      /******/\n      // The module cache\n\n      /******/\n\n      var __webpack_module_cache__ = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (__webpack_module_cache__[moduleId]) {\n          /******/\n          return __webpack_module_cache__[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = __webpack_module_cache__[moduleId] = {\n          /******/\n          // no module.id needed\n\n          /******/\n          // no module.loaded needed\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        __webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /************************************************************************/\n\n      /******/\n\n      /* webpack/runtime/compat get default export */\n\n      /******/\n\n\n      (() => {\n        /******/\n        // getDefaultExport function for compatibility with non-harmony modules\n\n        /******/\n        __webpack_require__.n = module => {\n          /******/\n          var getter = module && module.__esModule ?\n          /******/\n          () => module['default'] :\n          /******/\n          () => module;\n          /******/\n\n          __webpack_require__.d(getter, {\n            a: getter\n          });\n          /******/\n\n\n          return getter;\n          /******/\n        };\n        /******/\n\n      })();\n      /******/\n\n      /******/\n\n      /* webpack/runtime/define property getters */\n\n      /******/\n\n\n      (() => {\n        /******/\n        // define getter functions for harmony exports\n\n        /******/\n        __webpack_require__.d = (exports, definition) => {\n          /******/\n          for (var key in definition) {\n            /******/\n            if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n              /******/\n              Object.defineProperty(exports, key, {\n                enumerable: true,\n                get: definition[key]\n              });\n              /******/\n            }\n            /******/\n\n          }\n          /******/\n\n        };\n        /******/\n\n      })();\n      /******/\n\n      /******/\n\n      /* webpack/runtime/hasOwnProperty shorthand */\n\n      /******/\n\n\n      (() => {\n        /******/\n        __webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n        /******/\n\n      })();\n      /******/\n\n      /******/\n\n      /* webpack/runtime/make namespace object */\n\n      /******/\n\n\n      (() => {\n        /******/\n        // define __esModule on exports\n\n        /******/\n        __webpack_require__.r = exports => {\n          /******/\n          if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n            /******/\n            Object.defineProperty(exports, Symbol.toStringTag, {\n              value: 'Module'\n            });\n            /******/\n          }\n          /******/\n\n\n          Object.defineProperty(exports, '__esModule', {\n            value: true\n          });\n          /******/\n        };\n        /******/\n\n      })();\n      /******/\n\n      /************************************************************************/\n\n      /******/\n      // module exports must be returned from runtime so entry inlining is disabled\n\n      /******/\n      // startup\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n\n      return __webpack_require__(654);\n      /******/\n    })()\n  );\n});","map":{"version":3,"sources":["webpack://karrotframe/webpack/universalModuleDefinition","webpack://karrotframe/src/navigator/contexts/ContextNavigatorOptions.ts","webpack://karrotframe/src/navigator/contexts/ContextScreenInstanceInfo.ts","webpack://karrotframe/src/navigator/contexts/ContextScreenInstanceOptions.ts","webpack://karrotframe/src/navigator/store/createStore.ts","webpack://karrotframe/src/navigator/store/index.tsx","webpack://karrotframe/src/navigator/helpers/getNavigatorParams.ts","webpack://karrotframe/src/navigator/hooks/useHistoryEffect.ts","webpack://karrotframe/src/navigator/hooks/useUniqueId.tsx","webpack://karrotframe/src/navigator/useNavigator.ts","webpack://karrotframe/src/navigator/components/Card.scss","webpack://karrotframe/src/navigator/assets/IconBack.tsx","webpack://karrotframe/src/navigator/assets/IconClose.tsx","webpack://karrotframe/src/navigator/assets/index.ts","webpack://karrotframe/src/navigator/components/Navbar.scss","webpack://karrotframe/src/navigator/components/Navbar.tsx","webpack://karrotframe/src/navigator/components/Card.tsx","webpack://karrotframe/src/navigator/components/index.ts","webpack://karrotframe/src/navigator/Navigator.scss","webpack://karrotframe/src/navigator/Navigator.tsx","webpack://karrotframe/src/navigator/Screen.tsx","webpack://karrotframe/src/navigator/ScreenHelmet.tsx","webpack://karrotframe/src/navigator/useParams.ts","webpack://karrotframe/src/navigator/useQueryParams.ts","webpack:/karrotframe/external \"clsx\"","webpack://karrotframe/webpack/bootstrap","webpack:/karrotframe/webpack/runtime/compat get default export","webpack:/karrotframe/webpack/runtime/define property getters","webpack:/karrotframe/webpack/runtime/hasOwnProperty shorthand","webpack:/karrotframe/webpack/runtime/make namespace object","webpack://karrotframe/webpack/startup"],"names":["ContextNavigatorOptions","createContext","NavigatorOptionsProvider","useContext","ContextScreenInstanceInfo","ScreenInstanceInfoProvider","ContextScreenInstanceOptions","ScreenInstanceOptionsProvider","_state","initialState","_listenerIdx","_listeners","getState","setState","prevState","setter","state","Object","fn","listen","idx","createListenerIdx","StoreContext","StoreProvider","store","useMemo","createStore","screens","screenInstances","screenInstancePtr","screenInstanceOptions","screenInstancePromises","screenEdge","startX","startTime","props","useStore","value","setValue","useState","selector","useEffect","prevValue","nextValue","compare","dispose","addScreen","useCallback","screen","removeScreen","screenId","addScreenInstanceOption","screenInstanceId","screenInstanceOption","addScreenInstancePromise","screenInstancePromise","mapScreenInstance","ptr","mapper","i","insertScreenInstance","screenInstance","nestedRouteCount","increaseScreenInstancePtr","setScreenInstancePtr","setScreenEdge","NavigatorParamKeys","present","searchParams","history","useHistory","location","useLocation","locationKeyStack","useRef","getNavigatorParams","locationKey","key","depth","callback","action","UniqueIdContext","UniqueIdProvider","counterRef","uid","String","screenInfo","useScreenInstanceInfo","useUniqueId","useStoreActions","push","pathname","options","resolve","popped","replace","pop","targetScreenInstance","backwardCount","acc","targetPromise","_data","Promise","send","IconBack","IconClose","Navbar","useNavigator","navigatorOptions","useNavigatorOptions","useStoreSelector","centerMainWidth","setCenterMainWidth","navbarRef","centerRef","useLayoutEffect","onResize","screenWidth","leftWidth","centerWidth","rightWidth","sideMargin","Math","window","onBackClick","closeButton","styles","onClose","backButton","isLeft","noBorder","classnames","width","onTopClick","$frameOffsetSet","Card","navigator","setPopped","x","requestAnimationFrameLock","dimRef","frameRef","frameOffsetRef","isNavbarVisible","$frameOffset","onEdgeTouchStart","document","e","Date","onEdgeTouchMove","requestAnimationFrame","computedEdgeX","$dim","$frame","onEdgeTouchEnd","velocity","scroller","zenscroll","transition","undefined","DEFAULT_CUPERTINO_ANIMATION_DURATION","DEFAULT_ANDROID_ANIMATION_DURATION","Navigator","h","theme","animationDuration","onDepthChange","NavigatorScreens","pushScreen","as","nextPtr","id","replaceScreen","popScreen","targetScreenInstanceId","promise","matchScreen","matchPath","exact","path","nextState","useHistoryPushEffect","useHistoryReplaceEffect","useHistoryPopEffect","backward","forward","index","Transition","nodeRef","isRoot","Screen","Component","console","isTop","setNavbar","navbar","ScreenHelmet","useScreenInstanceOptions","visible","title","appendLeft","appendRight","closeButtonLocation","customBackButton","customCloseButton","disableScrollToTop","ignoreNestedRoutes","parse","prevParams","search","queryParams"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"clsx\"), require(\"react\"), require(\"react-fast-compare\"), require(\"react-router-dom\"), require(\"react-transition-group\"), require(\"zenscroll\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"clsx\", \"react\", \"react-fast-compare\", \"react-router-dom\", \"react-transition-group\", \"zenscroll\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"clsx\"), require(\"react\"), require(\"react-fast-compare\"), require(\"react-router-dom\"), require(\"react-transition-group\"), require(\"zenscroll\")) : factory(root[\"clsx\"], root[\"react\"], root[\"react-fast-compare\"], root[\"react-router-dom\"], root[\"react-transition-group\"], root[\"zenscroll\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function(__WEBPACK_EXTERNAL_MODULE__536__, __WEBPACK_EXTERNAL_MODULE__297__, __WEBPACK_EXTERNAL_MODULE__53__, __WEBPACK_EXTERNAL_MODULE__146__, __WEBPACK_EXTERNAL_MODULE__810__, __WEBPACK_EXTERNAL_MODULE__148__) {\nreturn ","import { createContext, useContext } from 'react'\n\nimport { NavigatorTheme } from '../helpers'\n\nexport interface NavigatorOptions {\n  theme: NavigatorTheme\n  animationDuration: number\n}\nexport const ContextNavigatorOptions = createContext<NavigatorOptions>(\n  null as any\n)\n\nexport const NavigatorOptionsProvider = ContextNavigatorOptions.Provider\n\nexport function useNavigatorOptions() {\n  return useContext(ContextNavigatorOptions)\n}\n","import { createContext, useContext } from 'react'\n\nexport const ContextScreenInstanceInfo = createContext<{\n  screenInstanceId: string\n  path: string\n  as: string\n}>(null as any)\n\nexport const ScreenInstanceInfoProvider = ContextScreenInstanceInfo.Provider\n\nexport function useScreenInstanceInfo() {\n  return useContext(ContextScreenInstanceInfo)\n}\n","import { createContext, useContext } from 'react'\n\nimport { NavbarOptions } from '../store'\n\nexport const ContextScreenInstanceOptions = createContext<{\n  setNavbar: (navbar: NavbarOptions) => void\n}>(null as any)\n\nexport const ScreenInstanceOptionsProvider =\n  ContextScreenInstanceOptions.Provider\n\nexport function useScreenInstanceOptions() {\n  return useContext(ContextScreenInstanceOptions)\n}\n","type Listener<T extends {}> = (prevState: T, nextState: T) => void\n\nexport type Store<T extends {}> = {\n  getState(): T\n  setState(setter: (prevState: T) => T): void\n  listen(\n    fn: (prevState: T, nextState: T) => void,\n    execute?: boolean\n  ): () => void\n}\n\nexport function createStore<T extends {}>(initialState: () => T): Store<T> {\n  let _state = initialState()\n  let _listenerIdx = 1\n\n  function createListenerIdx() {\n    return (_listenerIdx += 1)\n  }\n\n  const _listeners: { [key: number]: Listener<T> } = {}\n\n  return {\n    getState() {\n      return _state\n    },\n    setState(setter: (prevState: T) => T) {\n      const prevState = _state\n      _state = setter(_state)\n      const state = _state\n\n      Object.values(_listeners).map((fn) => fn(prevState, state))\n    },\n    listen(fn: (prevState: T, nextState: T) => void) {\n      const idx = createListenerIdx()\n\n      _listeners[idx] = fn\n\n      function dispose() {\n        delete _listeners[idx]\n      }\n\n      return dispose\n    },\n  }\n}\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport compare from 'react-fast-compare'\n\nimport { ScreenComponentProps } from '../ScreenComponentProps'\nimport { createStore, Store } from './createStore'\n\nexport interface Screen {\n  id: string\n  path: string\n  Component: React.FC<\n    { screenInstanceId: string; as: string } & ScreenComponentProps\n  >\n}\n\nexport interface ScreenInstance {\n  id: string\n  screenId: string\n  nestedRouteCount: number\n  present: boolean\n  as: string\n}\n\nexport interface ScreenInstanceOption {\n  navbar: NavbarOptions\n}\n\nexport interface NavbarOptions {\n  visible: boolean\n  title: React.ReactNode | null\n  appendLeft: React.ReactNode | null\n  appendRight: React.ReactNode | null\n  closeButtonLocation: 'left' | 'right'\n  customBackButton: React.ReactNode | null\n  customCloseButton: React.ReactNode | null\n  disableScrollToTop: boolean\n  noBorder: boolean\n  onTopClick?: () => void\n}\n\nexport type ScreenInstancePromise = {\n  resolve: (data: any | null) => void\n  popped: boolean\n}\n\nexport interface ScreenEdge {\n  startTime: number | null\n  startX: number | null\n}\n\nexport interface GlobalState {\n  screens: {\n    [screenId: string]: Screen | undefined\n  }\n  screenInstances: ScreenInstance[]\n  screenInstancePtr: number\n  screenInstanceOptions: {\n    [screenInstanceId: string]: ScreenInstanceOption | undefined\n  }\n  screenInstancePromises: {\n    [screenInstanceId: string]: ScreenInstancePromise | undefined\n  }\n  screenEdge: ScreenEdge\n}\n\nconst StoreContext = createContext<Store<GlobalState>>(null as any)\n\nexport const StoreProvider: React.FC = (props) => {\n  const store = useMemo(\n    () =>\n      createStore<GlobalState>(() => ({\n        screens: {},\n        screenInstances: [],\n        screenInstancePtr: -1,\n        screenInstanceOptions: {},\n        screenInstancePromises: {},\n        screenEdge: {\n          startX: null,\n          startTime: null,\n        },\n      })),\n    []\n  )\n\n  return (\n    <StoreContext.Provider value={store}>\n      {props.children}\n    </StoreContext.Provider>\n  )\n}\n\nexport function useStore() {\n  return useContext(StoreContext)\n}\n\nexport function useStoreSelector<V>(selector: (state: GlobalState) => V): V {\n  const store = useStore()\n  const [value, setValue] = useState(() => selector(store.getState()))\n\n  useEffect(() => {\n    const fn = (prevState: GlobalState | null, nextState: GlobalState) => {\n      const prevValue = prevState && selector(prevState)\n      const nextValue = selector(nextState)\n\n      if (\n        (prevValue && !compare(prevValue, nextValue)) ||\n        !compare(value, nextValue)\n      ) {\n        setValue(nextValue)\n      }\n    }\n\n    fn(null, store.getState())\n    const dispose = store.listen(fn, true)\n\n    return () => {\n      dispose()\n    }\n  }, [store, selector, setValue])\n\n  return value\n}\n\nexport function useStoreActions() {\n  const store = useStore()\n\n  const addScreen = useCallback(\n    ({ screen }: { screen: Screen }) => {\n      store.setState((prevState) => ({\n        ...prevState,\n        screens: {\n          ...prevState.screens,\n          [screen.id]: screen,\n        },\n      }))\n    },\n    [store]\n  )\n\n  const removeScreen = useCallback(\n    ({ screenId }: { screenId: string }) => {\n      store.setState((prevState) => ({\n        ...prevState,\n        screens: {\n          ...prevState.screens,\n          [screenId]: undefined,\n        },\n      }))\n    },\n    [store]\n  )\n\n  const addScreenInstanceOption = useCallback(\n    ({\n      screenInstanceId,\n      screenInstanceOption,\n    }: {\n      screenInstanceId: string\n      screenInstanceOption: ScreenInstanceOption\n    }) => {\n      store.setState((prevState) => ({\n        ...prevState,\n        screenInstanceOptions: {\n          ...prevState.screenInstanceOptions,\n          [screenInstanceId]: screenInstanceOption,\n        },\n      }))\n    },\n    [store]\n  )\n\n  const addScreenInstancePromise = useCallback(\n    ({\n      screenInstanceId,\n      screenInstancePromise,\n    }: {\n      screenInstanceId: string\n      screenInstancePromise: ScreenInstancePromise\n    }) => {\n      store.setState((prevState) => ({\n        ...prevState,\n        screenInstancePromises: {\n          ...prevState.screenInstancePromises,\n          [screenInstanceId]: screenInstancePromise,\n        },\n      }))\n    },\n    [store]\n  )\n\n  const mapScreenInstance = useCallback(\n    ({\n      ptr,\n      mapper,\n    }: {\n      ptr: number\n      mapper: (screenInstance: ScreenInstance) => ScreenInstance\n    }) => {\n      store.setState((prevState) => ({\n        ...prevState,\n        screenInstances: prevState.screenInstances.map((si, i) =>\n          i === ptr ? mapper(si) : si\n        ),\n      }))\n    },\n    [store]\n  )\n\n  const insertScreenInstance = useCallback(\n    ({\n      ptr,\n      screenInstance,\n    }: {\n      ptr: number\n      screenInstance: {\n        id: string\n        screenId: string\n        present: boolean\n        as: string\n      }\n    }) => {\n      store.setState((prevState) => ({\n        ...prevState,\n        screenInstances: [\n          ...prevState.screenInstances.filter((_, i) => i <= ptr),\n          {\n            ...screenInstance,\n            nestedRouteCount: 0,\n          },\n        ],\n      }))\n    },\n    [store]\n  )\n\n  const increaseScreenInstancePtr = useCallback(() => {\n    store.setState((prevState) => ({\n      ...prevState,\n      screenInstancePtr: prevState.screenInstancePtr + 1,\n    }))\n  }, [store])\n\n  const setScreenInstancePtr = useCallback(\n    ({ ptr }: { ptr: number }) => {\n      store.setState((prevState) => ({\n        ...prevState,\n        screenInstancePtr: ptr,\n      }))\n    },\n    [store]\n  )\n\n  const setScreenEdge = useCallback(\n    ({ screenEdge }: { screenEdge: ScreenEdge }) => {\n      store.setState((prevState) => ({\n        ...prevState,\n        screenEdge,\n      }))\n    },\n    [store]\n  )\n\n  return useMemo(\n    () => ({\n      addScreen,\n      removeScreen,\n      addScreenInstanceOption,\n      addScreenInstancePromise,\n      mapScreenInstance,\n      insertScreenInstance,\n      increaseScreenInstancePtr,\n      setScreenInstancePtr,\n      setScreenEdge,\n    }),\n    [\n      addScreen,\n      removeScreen,\n      addScreenInstanceOption,\n      addScreenInstancePromise,\n      mapScreenInstance,\n      insertScreenInstance,\n      increaseScreenInstancePtr,\n      setScreenInstancePtr,\n      setScreenEdge,\n    ]\n  )\n}\n","export const NavigatorParamKeys = Object.freeze({\n  screenInstanceId: '_si',\n  present: '_present',\n})\n\nexport type NavigatorParams = {\n  screenInstanceId: string | null\n  present: boolean\n}\n\nexport function getNavigatorParams(\n  searchParams: URLSearchParams\n): NavigatorParams {\n  return {\n    screenInstanceId: searchParams.get(NavigatorParamKeys.screenInstanceId),\n    present: searchParams.get(NavigatorParamKeys.present) === 'true',\n  }\n}\n","import { Action, Location } from 'history'\nimport { DependencyList, useEffect, useRef } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nimport { getNavigatorParams } from '../helpers'\n\nexport function useHistoryPopEffect(\n  callbacks: {\n    forward: (location: Location<unknown>, action: Action) => void\n    backward: (\n      location: Location<unknown>,\n      action: Action,\n      depth: number\n    ) => void\n  },\n  deps?: DependencyList | undefined\n) {\n  const history = useHistory()\n  const location = useLocation()\n\n  const locationKeyStack = useRef<string[]>([])\n\n  useEffect(() => {\n    if (locationKeyStack.current.length > 0 || !location.search) {\n      return\n    }\n\n    const searchParams = new URLSearchParams(location.search)\n    const { screenInstanceId } = getNavigatorParams(searchParams)\n    if (!screenInstanceId) {\n      return\n    }\n\n    locationKeyStack.current = [location.pathname + location.search]\n  }, [location.search])\n\n  useEffect(() => {\n    return history.listen((location, action) => {\n      const locationKey = location.pathname + location.search\n\n      switch (action) {\n        case 'PUSH': {\n          if (\n            locationKeyStack.current[locationKeyStack.current.length - 1] !==\n            locationKey\n          ) {\n            locationKeyStack.current.push(locationKey)\n          }\n          break\n        }\n        case 'REPLACE': {\n          locationKeyStack.current[locationKeyStack.current.length - 1] =\n            locationKey\n          break\n        }\n        case 'POP': {\n          const ptr = locationKeyStack.current.findIndex(\n            (key) => key === locationKey\n          )\n          if (ptr > -1) {\n            const depth = locationKeyStack.current.length - ptr\n            locationKeyStack.current = locationKeyStack.current.filter(\n              (_, idx) => idx <= ptr\n            )\n            callbacks.backward?.(location, action, depth)\n          } else {\n            locationKeyStack.current.push(locationKey)\n            callbacks.forward?.(location, action)\n          }\n        }\n      }\n    })\n  }, deps)\n}\n\nexport function useHistoryPushEffect(\n  callback: (location: Location<unknown>, action: Action) => void,\n  deps?: DependencyList | undefined\n) {\n  const history = useHistory()\n  const location = useLocation()\n  const locationKeyStack = useRef<string[]>([])\n\n  useEffect(() => {\n    locationKeyStack.current = [location.pathname + location.search]\n  }, [])\n\n  useEffect(() => {\n    return history.listen((location, action) => {\n      const locationKey = location.pathname + location.search\n\n      switch (action) {\n        case 'PUSH': {\n          if (\n            locationKeyStack.current[locationKeyStack.current.length - 1] !==\n            locationKey\n          ) {\n            locationKeyStack.current.push(locationKey)\n            callback(location, action)\n          }\n          break\n        }\n        case 'REPLACE': {\n          locationKeyStack.current[locationKeyStack.current.length - 1] =\n            locationKey\n          break\n        }\n        case 'POP': {\n          const ptr = locationKeyStack.current.findIndex(\n            (key) => key === locationKey\n          )\n          if (ptr > -1) {\n            locationKeyStack.current = locationKeyStack.current.filter(\n              (_, idx) => idx <= ptr\n            )\n          } else {\n            locationKeyStack.current.push(locationKey)\n          }\n        }\n      }\n    })\n  }, deps)\n}\n\nexport function useHistoryReplaceEffect(\n  callback: (location: Location<unknown>, action: Action) => void,\n  deps?: DependencyList | undefined\n) {\n  const history = useHistory()\n\n  useEffect(() => {\n    return history.listen((location, action) => {\n      if (action === 'REPLACE') {\n        callback(location, action)\n      }\n    })\n  }, deps)\n}\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useRef,\n} from 'react'\n\nconst UniqueIdContext = createContext<React.MutableRefObject<number>>(\n  null as any\n)\n\nexport const UniqueIdProvider: React.FC = (props) => {\n  const counterRef = useRef(0)\n\n  return (\n    <UniqueIdContext.Provider value={counterRef}>\n      {props.children}\n    </UniqueIdContext.Provider>\n  )\n}\n\nexport function useUniqueId() {\n  const counterRef = useContext(UniqueIdContext)\n\n  const uid = useCallback(() => {\n    counterRef.current += 1\n    return String(counterRef.current)\n  }, [counterRef])\n\n  return useMemo(\n    () => ({\n      uid,\n    }),\n    [uid]\n  )\n}\n","import { useCallback, useMemo } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nimport { useScreenInstanceInfo } from './contexts'\nimport { getNavigatorParams, NavigatorParamKeys } from './helpers'\nimport { useUniqueId } from './hooks'\nimport { useStore, useStoreActions } from './store'\n\nexport function useNavigator() {\n  const history = useHistory()\n  const location = useLocation()\n  const screenInfo = useScreenInstanceInfo()\n  const { uid } = useUniqueId()\n\n  const store = useStore()\n  const { addScreenInstancePromise } = useStoreActions()\n\n  const searchParams = new URLSearchParams(location.search)\n  const { present, screenInstanceId } = getNavigatorParams(searchParams)\n\n  const push = useCallback(\n    <T = object>(\n      to: string,\n      options?: {\n        /**\n         * Bottom to top animation (iOS only)\n         */\n        present?: boolean\n      }\n    ): Promise<T | null> =>\n      new Promise((resolve) => {\n        const { pathname, searchParams } = new URL(to, /* dummy */ 'file://')\n\n        searchParams.set(NavigatorParamKeys.screenInstanceId, uid())\n\n        if (options?.present) {\n          searchParams.set(NavigatorParamKeys.present, 'true')\n        }\n\n        addScreenInstancePromise({\n          screenInstanceId: screenInfo.screenInstanceId,\n          screenInstancePromise: {\n            resolve,\n            popped: false,\n          },\n        })\n\n        history.push(`${pathname}?${searchParams.toString()}`)\n      }),\n    [screenInfo, history]\n  )\n\n  const replace = useCallback(\n    (\n      to: string,\n      options?: {\n        /**\n         * Animate when replaced\n         */\n        animate?: boolean\n      }\n    ) => {\n      const { pathname, searchParams } = new URL(to, /* dummy */ 'file://')\n\n      if (options?.animate) {\n        searchParams.set(NavigatorParamKeys.screenInstanceId, uid())\n      } else {\n        if (screenInstanceId) {\n          searchParams.set(\n            NavigatorParamKeys.screenInstanceId,\n            screenInstanceId\n          )\n        }\n        if (present) {\n          searchParams.set(NavigatorParamKeys.present, 'true')\n        }\n      }\n\n      history.replace(`${pathname}?${searchParams.toString()}`)\n    },\n    [history, screenInstanceId, present]\n  )\n\n  const pop = useCallback(\n    (depth = 1) => {\n      const { screenInstances, screenInstancePtr, screenInstancePromises } =\n        store.getState()\n\n      const targetScreenInstance = screenInstances[screenInstancePtr - depth]\n\n      const backwardCount = screenInstances\n        .filter(\n          (_, idx) =>\n            idx > screenInstancePtr - depth && idx <= screenInstancePtr\n        )\n        .map((screenInstance) => screenInstance.nestedRouteCount)\n        .reduce((acc, current) => acc + current + 1, 0)\n\n      const targetPromise =\n        targetScreenInstance && screenInstancePromises[targetScreenInstance.id]\n      let _data: any = null\n\n      const dispose = history.listen(() => {\n        dispose()\n\n        if (targetScreenInstance) {\n          targetPromise?.resolve(_data ?? null)\n        }\n      })\n\n      /**\n       * Send data to `await push()`\n       */\n      function send<T = object>(\n        /**\n         * Payload\n         */\n        data: T\n      ) {\n        _data = data\n\n        if (targetPromise) {\n          targetPromise.popped = true\n        }\n      }\n\n      Promise.resolve().then(() => {\n        history.go(-backwardCount)\n      })\n\n      return {\n        send,\n      }\n    },\n    [history]\n  )\n\n  return useMemo(\n    () => ({\n      push,\n      replace,\n      pop,\n    }),\n    [push, replace, pop]\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"cardDim\":\"kf-1Dlge\",\"isNavbarVisible\":\"kf-1uMCR\",\"isPresent\":\"kf-1gXS3\",\"cardMainOffset\":\"kf-3fn0s\",\"isNotTop\":\"kf-2d7n7\",\"cardMain\":\"kf-1-WR3\",\"isRoot\":\"kf-1f-AW\",\"cardFrameOffset\":\"kf-373mp\",\"cardFrame\":\"kf-SlqYE\",\"isNotRoot\":\"kf-2Xv7E\",\"cardEdge\":\"kf-osuJc\",\"isNavbarNotVisible\":\"kf-3ZA-l\",\"cardTransitionNode\":\"kf-3Rnfn\",\"isNotPresent\":\"kf-24jIi\"};","import React from 'react'\n\nconst IconBack: React.FC = () => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M11.5659 5.56564C11.8783 5.25322 11.8783 4.74669 11.5659 4.43427C11.2535 4.12185 10.7469 4.12185 10.4345 4.43427L3.43451 11.4343C3.12209 11.7467 3.12209 12.2532 3.43451 12.5656L10.4345 19.5656C10.7469 19.8781 11.2535 19.8781 11.5659 19.5656C11.8783 19.2532 11.8783 18.7467 11.5659 18.4343L5.93157 12.8H20.0002C20.442 12.8 20.8002 12.4418 20.8002 12C20.8002 11.5581 20.442 11.2 20.0002 11.2H5.93157L11.5659 5.56564Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  )\n}\n\nexport default IconBack\n","import React from 'react'\n\nconst IconClose: React.FC = () => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M6.56588 5.43433C6.25346 5.12191 5.74693 5.12191 5.43451 5.43433C5.12209 5.74675 5.12209 6.25328 5.43451 6.5657L10.8688 12L5.43451 17.4343C5.12209 17.7467 5.12209 18.2533 5.43451 18.5657C5.74693 18.8781 6.25346 18.8781 6.56588 18.5657L12.0002 13.1314L17.4345 18.5657C17.7469 18.8781 18.2535 18.8781 18.5659 18.5657C18.8783 18.2533 18.8783 17.7467 18.5659 17.4343L13.1316 12L18.5659 6.5657C18.8783 6.25328 18.8783 5.74675 18.5659 5.43433C18.2535 5.12191 17.7469 5.12191 17.4345 5.43433L12.0002 10.8686L6.56588 5.43433Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M6.56588 5.43433C6.25346 5.12191 5.74693 5.12191 5.43451 5.43433C5.12209 5.74675 5.12209 6.25328 5.43451 6.5657L10.8688 12L5.43451 17.4343C5.12209 17.7467 5.12209 18.2533 5.43451 18.5657C5.74693 18.8781 6.25346 18.8781 6.56588 18.5657L12.0002 13.1314L17.4345 18.5657C17.7469 18.8781 18.2535 18.8781 18.5659 18.5657C18.8783 18.2533 18.8783 17.7467 18.5659 17.4343L13.1316 12L18.5659 6.5657C18.8783 6.25328 18.8783 5.74675 18.5659 5.43433C18.2535 5.12191 17.7469 5.12191 17.4345 5.43433L12.0002 10.8686L6.56588 5.43433Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  )\n}\n\nexport default IconClose\n","export { default as IconBack } from './IconBack'\nexport { default as IconClose } from './IconClose'\n","// extracted by mini-css-extract-plugin\nexport default {\"navbar\":\"kf-3Jmg5\",\"navbarMain\":\"kf-2uFk2\",\"noBorder\":\"kf-2cWV9\",\"navbarFlex\":\"kf-2rYDY\",\"navbarLeft\":\"kf-2zSD_\",\"navbarBack\":\"kf-PIEEh\",\"navbarCenter\":\"kf-6ERVe\",\"navbarCenterMain\":\"kf-1VG6K\",\"isLeft\":\"kf-JC-xO\",\"navbarCenterMainText\":\"kf-2CmRa\",\"navbarCenterMainEdge\":\"kf-T2bcn\",\"navbarRight\":\"kf-1fEQ5\",\"navbarClose\":\"kf-hDBIq\"};","import classnames from 'clsx'\nimport React, { useLayoutEffect, useRef, useState } from 'react'\n\nimport { IconBack, IconClose } from '../assets'\nimport { useNavigatorOptions } from '../contexts'\nimport { NavigatorTheme } from '../helpers'\nimport { useStoreSelector } from '../store'\nimport { useNavigator } from '../useNavigator'\nimport styles from './Navbar.scss'\n\ninterface NavbarProps {\n  screenInstanceId: string\n  theme: NavigatorTheme\n  isRoot: boolean\n  isPresent: boolean\n  onTopClick: () => void\n  onClose?: () => void\n}\nconst Navbar: React.FC<NavbarProps> = (props) => {\n  const { pop } = useNavigator()\n  const navigatorOptions = useNavigatorOptions()\n\n  const screenInstanceOptions = useStoreSelector(\n    (state) => state.screenInstanceOptions\n  )\n\n  const [centerMainWidth, setCenterMainWidth] = useState<string | undefined>(\n    undefined\n  )\n\n  const navbarRef = useRef<HTMLDivElement>(null)\n  const centerRef = useRef<HTMLDivElement>(null)\n\n  const screenInstanceOption = screenInstanceOptions[props.screenInstanceId]\n\n  useLayoutEffect(() => {\n    const onResize = () => {\n      if (!navbarRef.current || !centerRef.current) {\n        return\n      }\n\n      const screenWidth = navbarRef.current.clientWidth\n\n      const { offsetLeft: leftWidth, clientWidth: centerWidth } =\n        centerRef.current\n      const rightWidth = screenWidth - leftWidth - centerWidth\n\n      const sideMargin = Math.max(leftWidth, rightWidth)\n\n      setCenterMainWidth(screenWidth - 2 * sideMargin + 'px')\n    }\n\n    if (props.theme === 'Cupertino') {\n      onResize()\n      window.addEventListener('resize', onResize)\n\n      return () => {\n        window.removeEventListener('resize', onResize)\n      }\n    }\n  }, [screenInstanceOption])\n\n  const onBackClick = () => {\n    pop()\n  }\n\n  const closeButton =\n    props.onClose &&\n    props.isRoot &&\n    (screenInstanceOption?.navbar.customCloseButton ? (\n      <a\n        role=\"text\"\n        aria-label=\"닫기\"\n        className={styles.navbarClose}\n        onClick={props.onClose}\n      >\n        {screenInstanceOption.navbar.customCloseButton}\n      </a>\n    ) : (\n      <a\n        role=\"text\"\n        aria-label=\"닫기\"\n        className={styles.navbarClose}\n        onClick={props.onClose}\n      >\n        <IconClose />\n      </a>\n    ))\n\n  const backButton =\n    !props.isRoot &&\n    (screenInstanceOption?.navbar.customBackButton ? (\n      <a\n        role=\"text\"\n        aria-label=\"뒤로가기\"\n        className={styles.navbarBack}\n        onClick={onBackClick}\n      >\n        {screenInstanceOption.navbar.customBackButton}\n      </a>\n    ) : (\n      <a\n        role=\"text\"\n        aria-label=\"뒤로가기\"\n        className={styles.navbarBack}\n        onClick={onBackClick}\n      >\n        {navigatorOptions.theme === 'Cupertino' && props.isPresent ? (\n          <IconClose />\n        ) : (\n          <IconBack />\n        )}\n      </a>\n    ))\n\n  const isLeft = !!(\n    (screenInstanceOption?.navbar.closeButtonLocation === 'left' &&\n      closeButton) ||\n    backButton ||\n    screenInstanceOption?.navbar.appendLeft\n  )\n\n  const noBorder = screenInstanceOption?.navbar.noBorder\n\n  return (\n    <div ref={navbarRef} className={classnames('kf-navbar', styles.navbar)}>\n      <div\n        className={classnames(styles.navbarMain, {\n          [styles.noBorder]: noBorder,\n        })}\n      >\n        <div className={styles.navbarFlex}>\n          <div className={styles.navbarLeft}>\n            {screenInstanceOption?.navbar.closeButtonLocation === 'left' &&\n              closeButton}\n            {backButton}\n            {screenInstanceOption?.navbar.appendLeft}\n          </div>\n          <div ref={centerRef} className={styles.navbarCenter}>\n            <div\n              className={classnames(styles.navbarCenterMain, {\n                [styles.isLeft]: isLeft,\n              })}\n              style={{\n                width: centerMainWidth,\n              }}\n            >\n              {typeof screenInstanceOption?.navbar.title === 'string' ? (\n                <div className={styles.navbarCenterMainText}>\n                  {screenInstanceOption?.navbar.title}\n                </div>\n              ) : (\n                screenInstanceOption?.navbar.title\n              )}\n            </div>\n            <div\n              className={styles.navbarCenterMainEdge}\n              style={{\n                width: centerMainWidth,\n              }}\n              onClick={props.onTopClick}\n            />\n          </div>\n          <div className={styles.navbarRight}>\n            {screenInstanceOption?.navbar.appendRight}\n            {screenInstanceOption?.navbar.closeButtonLocation === 'right' &&\n              closeButton}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Navbar\n","import classnames from 'clsx'\nimport React, { useCallback, useEffect, useRef, useState } from 'react'\nimport zenscroll from 'zenscroll'\n\nimport { useNavigatorOptions } from '../contexts'\nimport { useStore, useStoreActions, useStoreSelector } from '../store'\nimport { useNavigator } from '../useNavigator'\nimport styles from './Card.scss'\nimport Navbar from './Navbar'\n\nconst $frameOffsetSet = new Set<HTMLDivElement>()\n\ninterface CardProps {\n  nodeRef: React.RefObject<HTMLDivElement>\n  screenPath: string\n  screenInstanceId: string\n  isRoot: boolean\n  isTop: boolean\n  isPresent: boolean\n  onClose?: () => void\n}\nconst Card: React.FC<CardProps> = (props) => {\n  const navigator = useNavigator()\n  const navigatorOptions = useNavigatorOptions()\n\n  const [popped, setPopped] = useState(false)\n\n  const store = useStore()\n  const { screenEdge, screenInstanceOptions } = useStoreSelector((state) => ({\n    screenEdge: state.screenEdge,\n    screenInstanceOptions: state.screenInstanceOptions,\n  }))\n  const { setScreenEdge } = useStoreActions()\n\n  const x = useRef<number>(0)\n  const requestAnimationFrameLock = useRef<boolean>(false)\n\n  const dimRef = useRef<HTMLDivElement>(null)\n  const frameRef = useRef<HTMLDivElement>(null)\n  const frameOffsetRef = useRef<HTMLDivElement>(null)\n\n  const isNavbarVisible =\n    screenInstanceOptions[props.screenInstanceId]?.navbar.visible\n\n  useEffect(() => {\n    const $frameOffset = frameOffsetRef.current\n\n    if ($frameOffset) {\n      $frameOffsetSet.add($frameOffset)\n\n      return () => {\n        $frameOffsetSet.delete($frameOffset)\n      }\n    }\n  }, [frameOffsetRef.current])\n\n  const onEdgeTouchStart = useCallback(\n    (e: React.TouchEvent<HTMLDivElement>) => {\n      ;(document.activeElement as any)?.blur?.()\n\n      setScreenEdge({\n        screenEdge: {\n          startX: e.touches[0].clientX,\n          startTime: Date.now(),\n        },\n      })\n    },\n    []\n  )\n\n  const onEdgeTouchMove = useCallback(\n    (e: React.TouchEvent<HTMLDivElement>) => {\n      if (screenEdge.startX) {\n        x.current = e.touches[0].clientX\n\n        if (!requestAnimationFrameLock.current) {\n          requestAnimationFrameLock.current = true\n\n          requestAnimationFrame(() => {\n            if (x.current > 0) {\n              const computedEdgeX = x.current - screenEdge.startX!\n\n              const $dim = dimRef.current\n              const $frame = frameRef.current\n\n              if (computedEdgeX >= 0) {\n                if ($dim) {\n                  $dim.style.opacity = `${\n                    1 - computedEdgeX / window.screen.width\n                  }`\n                  $dim.style.transition = '0s'\n                }\n                if ($frame) {\n                  $frame.style.overflowY = 'hidden'\n                  $frame.style.transform = `translateX(${computedEdgeX}px)`\n                  $frame.style.transition = '0s'\n                }\n                $frameOffsetSet.forEach(($frameOffset) => {\n                  if ($frameOffset !== frameOffsetRef.current) {\n                    $frameOffset.style.transform = `translateX(-${\n                      5 - (5 * computedEdgeX) / window.screen.width\n                    }rem)`\n                    $frameOffset.style.transition = '0s'\n                  }\n                })\n              }\n            }\n\n            requestAnimationFrameLock.current = false\n          })\n        }\n      }\n    },\n    [screenEdge]\n  )\n\n  const onEdgeTouchEnd = useCallback(() => {\n    if (x.current) {\n      const velocity =\n        x.current / (Date.now() - (screenEdge.startTime as number))\n\n      if (velocity > 1 || x.current / window.screen.width > 0.4) {\n        setPopped(true)\n        navigator.pop()\n      }\n\n      setScreenEdge({\n        screenEdge: {\n          startX: null,\n          startTime: null,\n        },\n      })\n\n      x.current = 0\n\n      requestAnimationFrame(() => {\n        const $dim = dimRef.current\n        const $frame = frameRef.current\n\n        if ($dim) {\n          $dim.style.opacity = ''\n          $dim.style.transition = `opacity ${navigatorOptions.animationDuration}ms`\n        }\n        if ($frame) {\n          $frame.style.overflowY = ''\n          $frame.style.transform = ''\n          $frame.style.transition =\n            navigatorOptions.theme === 'Cupertino'\n              ? `transform ${navigatorOptions.animationDuration}ms`\n              : ''\n        }\n        $frameOffsetSet.forEach(($frameOffset) => {\n          $frameOffset.style.transform = ''\n          $frameOffset.style.transition = `transform ${navigatorOptions.animationDuration}ms`\n        })\n      })\n    }\n  }, [screenEdge])\n\n  const onTopClick = useCallback(() => {\n    const screenInstanceOption =\n      store.getState().screenInstanceOptions[props.screenInstanceId]\n\n    if (!screenInstanceOption?.navbar.disableScrollToTop && frameRef.current) {\n      const scroller = zenscroll.createScroller(frameRef.current)\n      scroller.toY(0)\n    }\n\n    screenInstanceOption?.navbar.onTopClick?.()\n  }, [])\n\n  return (\n    <div\n      ref={props.nodeRef}\n      className={classnames(styles.cardTransitionNode, {\n        [styles.isNotPresent]: !props.isPresent,\n        [styles.isPresent]: props.isPresent,\n      })}\n    >\n      {!props.isRoot && (\n        <div\n          ref={dimRef}\n          className={classnames(styles.cardDim, {\n            [styles.isNavbarVisible]: !!isNavbarVisible,\n            [styles.isPresent]: props.isPresent,\n          })}\n          style={{\n            transition: `opacity ${navigatorOptions.animationDuration}ms`,\n          }}\n        />\n      )}\n      <div\n        className={classnames(styles.cardMainOffset, {\n          [styles.isNotTop]: !props.isTop,\n        })}\n        style={{\n          transition: `transform ${navigatorOptions.animationDuration}ms`,\n        }}\n      >\n        <div\n          className={classnames(styles.cardMain, {\n            [styles.isNavbarVisible]: !!isNavbarVisible,\n            [styles.isPresent]: props.isPresent,\n            [styles.isRoot]: props.isRoot,\n          })}\n          style={{\n            transition:\n              navigatorOptions.theme === 'Cupertino' && props.isPresent\n                ? `transform ${navigatorOptions.animationDuration}ms`\n                : navigatorOptions.theme === 'Android'\n                ? `transform ${navigatorOptions.animationDuration}ms, opacity ${navigatorOptions.animationDuration}ms`\n                : undefined,\n          }}\n        >\n          {!!isNavbarVisible && (\n            <Navbar\n              screenInstanceId={props.screenInstanceId}\n              theme={navigatorOptions.theme}\n              isRoot={props.isRoot}\n              isPresent={props.isPresent}\n              onClose={props.onClose}\n              onTopClick={onTopClick}\n            />\n          )}\n          <div\n            ref={frameOffsetRef}\n            className={classnames(styles.cardFrameOffset, {\n              [styles.isNotTop]: !props.isTop,\n            })}\n            style={{\n              transition: `transform ${navigatorOptions.animationDuration}ms`,\n            }}\n          >\n            <div\n              ref={frameRef}\n              className={classnames('kf-frame', styles.cardFrame, {\n                [styles.isNotRoot]: !props.isRoot,\n                [styles.isPresent]: props.isPresent,\n              })}\n              style={{\n                transition:\n                  navigatorOptions.theme === 'Cupertino'\n                    ? `transform ${navigatorOptions.animationDuration}ms`\n                    : undefined,\n              }}\n            >\n              {props.children}\n            </div>\n          </div>\n          {navigatorOptions.theme === 'Cupertino' &&\n            !props.isRoot &&\n            !props.isPresent &&\n            !popped && (\n              <div\n                className={classnames(styles.cardEdge, {\n                  [styles.isNavbarNotVisible]: !isNavbarVisible,\n                  [styles.isNavbarVisible]: !!isNavbarVisible,\n                })}\n                onTouchStart={onEdgeTouchStart}\n                onTouchMove={onEdgeTouchMove}\n                onTouchEnd={onEdgeTouchEnd}\n              />\n            )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","export { default as Card } from './Card'\nexport { default as Navbar } from './Navbar'\n","// extracted by mini-css-extract-plugin\nexport default {\"navigatorRoot\":\"kf-p0r7I\"};","import classnames from 'clsx'\nimport React, { useCallback, useEffect, useRef } from 'react'\nimport {\n  HashRouter,\n  matchPath,\n  useHistory,\n  useLocation,\n} from 'react-router-dom'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\n\nimport { Card } from './components'\nimport { NavigatorOptionsProvider, useNavigatorOptions } from './contexts'\nimport {\n  getNavigatorParams,\n  NavigatorParamKeys,\n  NavigatorTheme,\n} from './helpers'\nimport {\n  UniqueIdProvider,\n  useHistoryPopEffect,\n  useHistoryPushEffect,\n  useHistoryReplaceEffect,\n  useUniqueId,\n} from './hooks'\nimport styles from './Navigator.scss'\nimport {\n  ScreenInstance,\n  StoreProvider,\n  useStore,\n  useStoreActions,\n  useStoreSelector,\n} from './store'\n\ndeclare global {\n  interface Window {\n    __KARROTFRAME__?: boolean\n  }\n}\n\nconst DEFAULT_CUPERTINO_ANIMATION_DURATION = 350\nconst DEFAULT_ANDROID_ANIMATION_DURATION = 270\n\ninterface NavigatorProps {\n  /**\n   * Theme (default: `Web`)\n   */\n  theme?: NavigatorTheme\n\n  /**\n   * Transition animation duration\n   */\n  animationDuration?: number\n\n  /**\n   * Remove built-in `<HashRouter />`\n   * and use your own custom `<Router />`\n   */\n  useCustomRouter?: boolean\n\n  /**\n   * When close button clicked\n   */\n  onClose?: () => void\n\n  /**\n   * When navigation depth changed\n   */\n  onDepthChange?: (depth: number) => void\n}\nconst Navigator: React.FC<NavigatorProps> = (props) => {\n  let h = (\n    <NavigatorOptionsProvider\n      value={{\n        theme: props.theme ?? 'Android',\n        animationDuration:\n          props.animationDuration ??\n          (() => {\n            switch (props.theme ?? 'Android') {\n              case 'Cupertino':\n                return DEFAULT_CUPERTINO_ANIMATION_DURATION\n              case 'Android':\n                return DEFAULT_ANDROID_ANIMATION_DURATION\n            }\n          })(),\n      }}\n    >\n      <UniqueIdProvider>\n        <StoreProvider>\n          <NavigatorScreens\n            theme={props.theme ?? 'Android'}\n            onClose={props.onClose}\n            onDepthChange={props.onDepthChange}\n          >\n            {props.children}\n          </NavigatorScreens>\n        </StoreProvider>\n      </UniqueIdProvider>\n    </NavigatorOptionsProvider>\n  )\n\n  if (!props.useCustomRouter) {\n    h = <HashRouter>{h}</HashRouter>\n  }\n\n  return h\n}\n\ninterface NavigatorScreensProps {\n  theme: NavigatorTheme\n  onClose?: () => void\n  onDepthChange?: (depth: number) => void\n}\nconst NavigatorScreens: React.FC<NavigatorScreensProps> = (props) => {\n  const location = useLocation()\n  const history = useHistory()\n  const { uid } = useUniqueId()\n\n  const store = useStore()\n  const { screenInstances, screenInstancePtr } = useStoreSelector((state) => ({\n    screenInstances: state.screenInstances,\n    screenInstancePtr: state.screenInstancePtr,\n  }))\n  const {\n    increaseScreenInstancePtr,\n    insertScreenInstance,\n    mapScreenInstance,\n    setScreenInstancePtr,\n  } = useStoreActions()\n\n  const pushScreen = useCallback(\n    ({\n      screenId,\n      screenInstanceId,\n      present,\n      as,\n    }: {\n      screenId: string\n      screenInstanceId: string\n      present: boolean\n      as: string\n    }) => {\n      const { screenInstances, screenInstancePtr } = store.getState()\n\n      const nextPtr = screenInstances.findIndex(\n        (screenInstance) => screenInstance.id === screenInstanceId\n      )\n\n      if (nextPtr === -1) {\n        insertScreenInstance({\n          ptr: screenInstancePtr,\n          screenInstance: {\n            id: screenInstanceId,\n            screenId,\n            present,\n            as,\n          },\n        })\n        increaseScreenInstancePtr()\n      } else {\n        setScreenInstancePtr({ ptr: nextPtr })\n      }\n    },\n    []\n  )\n\n  const replaceScreen = useCallback(\n    ({\n      screenId,\n      screenInstanceId,\n      as,\n      present,\n    }: {\n      screenId: string\n      screenInstanceId: string\n      as: string\n      present: boolean\n    }) => {\n      const { screenInstancePtr } = store.getState()\n\n      insertScreenInstance({\n        ptr: screenInstancePtr - 1,\n        screenInstance: {\n          id: screenInstanceId,\n          screenId,\n          present,\n          as,\n        },\n      })\n    },\n    []\n  )\n\n  const popScreen = useCallback(\n    ({\n      depth,\n      targetScreenInstanceId,\n    }: {\n      depth: number\n      targetScreenInstanceId?: string\n    }) => {\n      const { screenInstancePromises, screenInstancePtr } = store.getState()\n      if (targetScreenInstanceId) {\n        const promise = screenInstancePromises[targetScreenInstanceId]\n\n        if (promise && !promise.popped) {\n          promise.resolve(null)\n        }\n      }\n      setScreenInstancePtr({\n        ptr: screenInstancePtr - depth,\n      })\n    },\n    []\n  )\n\n  useEffect(() => {\n    if (typeof window === 'undefined') {\n      return\n    }\n    if (window.__KARROTFRAME__) {\n      throw new Error('한 개의 앱에는 한 개의 Navigator만 허용됩니다')\n    }\n\n    window.__KARROTFRAME__ = true\n\n    const searchParams = new URLSearchParams(location.search)\n    searchParams.set(NavigatorParamKeys.screenInstanceId, uid())\n\n    history.replace(`${location.pathname}?${searchParams.toString()}`)\n\n    return () => {\n      window.__KARROTFRAME__ = false\n    }\n  }, [])\n\n  useEffect(() => {\n    if (!location.search) {\n      return\n    }\n\n    const { screens, screenInstances } = store.getState()\n\n    if (screenInstances.length > 0) {\n      return\n    }\n\n    const searchParams = new URLSearchParams(location.search)\n    const { screenInstanceId } = getNavigatorParams(searchParams)\n\n    const matchScreen = Object.values(screens).find(\n      (screen) =>\n        screen &&\n        matchPath(location.pathname, { exact: true, path: screen.path })\n    )\n\n    if (screenInstanceId && matchScreen) {\n      pushScreen({\n        screenId: matchScreen.id,\n        screenInstanceId,\n        present: false,\n        as: location.pathname,\n      })\n    }\n  }, [location.search])\n\n  useEffect(() => {\n    return store.listen((prevState, nextState) => {\n      if (\n        nextState.screenInstancePtr > -1 &&\n        prevState.screenInstancePtr !== nextState.screenInstancePtr\n      ) {\n        props.onDepthChange?.(nextState.screenInstancePtr)\n      }\n    })\n  }, [props.onDepthChange])\n\n  useHistoryPushEffect(\n    (location) => {\n      const { screens, screenInstancePtr } = store.getState()\n\n      const searchParams = new URLSearchParams(location.search)\n      const { screenInstanceId, present } = getNavigatorParams(searchParams)\n\n      const matchScreen = Object.values(screens).find(\n        (screen) =>\n          !!screen &&\n          matchPath(location.pathname, { exact: true, path: screen.path })\n      )\n\n      if (screenInstanceId && matchScreen) {\n        pushScreen({\n          screenId: matchScreen.id,\n          screenInstanceId,\n          present,\n          as: location.pathname,\n        })\n      } else {\n        mapScreenInstance({\n          ptr: screenInstancePtr,\n          mapper: (screenInstance) => ({\n            ...screenInstance,\n            nestedRouteCount: screenInstance.nestedRouteCount + 1,\n          }),\n        })\n      }\n    },\n    [pushScreen]\n  )\n\n  useHistoryReplaceEffect(\n    (location) => {\n      const { screens } = store.getState()\n\n      const searchParams = new URLSearchParams(location.search)\n      const { screenInstanceId, present } = getNavigatorParams(searchParams)\n\n      const matchScreen = Object.values(screens).find(\n        (screen) =>\n          screen &&\n          matchPath(location.pathname, { exact: true, path: screen.path })\n      )\n\n      if (screenInstanceId && matchScreen) {\n        replaceScreen({\n          screenId: matchScreen.id,\n          screenInstanceId,\n          present,\n          as: location.pathname,\n        })\n      }\n    },\n    [replaceScreen]\n  )\n\n  useHistoryPopEffect(\n    {\n      backward(location) {\n        const { screens, screenInstances, screenInstancePtr } = store.getState()\n\n        const matchScreen = Object.values(screens).find(\n          (screen) =>\n            screen &&\n            matchPath(location.pathname, { exact: true, path: screen.path })\n        )\n\n        const searchParams = new URLSearchParams(location.search)\n        const { screenInstanceId } = getNavigatorParams(searchParams)\n\n        if (screenInstanceId && matchScreen) {\n          const nextPtr = screenInstances.findIndex(\n            (screenInstance) => screenInstance.id === screenInstanceId\n          )\n\n          mapScreenInstance({\n            ptr: screenInstancePtr,\n            mapper: (screenInstance) => ({\n              ...screenInstance,\n              nestedRouteCount: 0,\n            }),\n          })\n          popScreen({\n            depth: screenInstancePtr - nextPtr,\n            targetScreenInstanceId: screenInstanceId,\n          })\n        } else if (screenInstances[screenInstancePtr]?.nestedRouteCount === 0) {\n          popScreen({\n            depth: 1,\n          })\n        } else {\n          mapScreenInstance({\n            ptr: screenInstancePtr,\n            mapper: (screenInstance) => ({\n              ...screenInstance,\n              nestedRouteCount: screenInstance.nestedRouteCount - 1,\n            }),\n          })\n        }\n      },\n      forward(location) {\n        const { screens, screenInstancePtr } = store.getState()\n        const searchParams = new URLSearchParams(location.search)\n        const { screenInstanceId, present } = getNavigatorParams(searchParams)\n\n        const matchScreen = Object.values(screens).find(\n          (screen) =>\n            screen &&\n            matchPath(location.pathname, { exact: true, path: screen.path })\n        )\n\n        if (screenInstanceId && matchScreen) {\n          pushScreen({\n            screenId: matchScreen.id,\n            screenInstanceId,\n            present,\n            as: location.pathname,\n          })\n        } else {\n          mapScreenInstance({\n            ptr: screenInstancePtr,\n            mapper(screenInstance: ScreenInstance): ScreenInstance {\n              return {\n                ...screenInstance,\n                nestedRouteCount: screenInstance.nestedRouteCount + 1,\n              }\n            },\n          })\n        }\n      },\n    },\n    [popScreen, pushScreen]\n  )\n\n  return (\n    <div\n      className={classnames(styles.navigatorRoot, {\n        'kf-android': props.theme === 'Android',\n        'kf-cupertino': props.theme === 'Cupertino',\n      })}\n    >\n      {props.children}\n      <TransitionGroup component={null}>\n        {screenInstances.map((screenInstance, index) => (\n          <Transition\n            key={index}\n            screenInstance={screenInstance}\n            screenInstanceIndex={index}\n            isRoot={index === 0}\n            isTop={index === screenInstancePtr}\n            onClose={props.onClose}\n          />\n        ))}\n      </TransitionGroup>\n    </div>\n  )\n}\n\ninterface TransitionProps {\n  screenInstance: ScreenInstance\n  screenInstanceIndex: number\n  isRoot: boolean\n  isTop: boolean\n  onClose?: () => void\n}\nconst Transition: React.FC<TransitionProps> = (props) => {\n  const navigatorOptions = useNavigatorOptions()\n  const nodeRef = useRef<HTMLDivElement>(null)\n\n  const { screens, screenInstancePtr, screenInstances } = useStoreSelector(\n    (state) => ({\n      screens: state.screens,\n      screenInstancePtr: state.screenInstancePtr,\n      screenInstances: state.screenInstances,\n    })\n  )\n\n  const screen = screens[props.screenInstance.screenId]\n\n  if (!screen) {\n    return null\n  }\n\n  return (\n    <CSSTransition\n      key={props.screenInstance.id}\n      nodeRef={nodeRef}\n      timeout={navigatorOptions.animationDuration}\n      in={props.screenInstanceIndex <= screenInstancePtr}\n      unmountOnExit\n    >\n      <Card\n        nodeRef={nodeRef}\n        screenPath={screen.path}\n        screenInstanceId={props.screenInstance.id}\n        isRoot={props.screenInstanceIndex === 0}\n        isTop={\n          props.screenInstanceIndex >= screenInstancePtr ||\n          (navigatorOptions.theme === 'Cupertino' &&\n            screenInstances.length > props.screenInstanceIndex + 1 &&\n            screenInstances[props.screenInstanceIndex + 1].present)\n        }\n        isPresent={props.screenInstance.present}\n        onClose={props.onClose}\n      >\n        <screen.Component\n          as={props.screenInstance.as}\n          screenInstanceId={props.screenInstance.id}\n          isTop={props.isTop}\n          isRoot={props.isRoot}\n        />\n      </Card>\n    </CSSTransition>\n  )\n}\n\nexport default Navigator\n","import React, { useEffect } from 'react'\n\nimport {\n  ScreenInstanceInfoProvider,\n  ScreenInstanceOptionsProvider,\n} from './contexts'\nimport { ScreenComponentProps } from './ScreenComponentProps'\nimport { NavbarOptions, useStoreActions } from './store'\n\ninterface Props {\n  /**\n   * URL path\n   */\n  path: string\n\n  /**\n   * Component\n   */\n  component?: React.ComponentType<ScreenComponentProps>\n}\nconst Screen: React.FC<Props> = (props) => {\n  const { component: Component } = props\n  const { addScreen, addScreenInstanceOption, removeScreen } = useStoreActions()\n\n  useEffect(() => {\n    if (!props.children && !Component) {\n      console.warn('component props, children 중 하나는 반드시 필요합니다')\n      return\n    }\n\n    const screenId = props.path\n\n    addScreen({\n      screen: {\n        id: screenId,\n        path: props.path,\n        Component({ screenInstanceId, isTop, isRoot, as }) {\n          const setNavbar = (navbar: NavbarOptions) => {\n            addScreenInstanceOption({\n              screenInstanceId,\n              screenInstanceOption: {\n                navbar,\n              },\n            })\n          }\n\n          return (\n            <ScreenInstanceInfoProvider\n              value={{\n                screenInstanceId,\n                as,\n                path: props.path,\n              }}\n            >\n              <ScreenInstanceOptionsProvider\n                value={{\n                  setNavbar,\n                }}\n              >\n                {Component ? (\n                  <Component isTop={isTop} isRoot={isRoot} />\n                ) : (\n                  props.children\n                )}\n              </ScreenInstanceOptionsProvider>\n            </ScreenInstanceInfoProvider>\n          )\n        },\n      },\n    })\n\n    return () => {\n      removeScreen({\n        screenId,\n      })\n    }\n  }, [props.path, Component])\n\n  return null\n}\n\nexport default Screen\n","import React, { useEffect } from 'react'\n\nimport { useScreenInstanceOptions } from './contexts'\n\ninterface ScreenHelmetProps {\n  /**\n   * title\n   */\n  title?: React.ReactNode\n\n  /**\n   * Append elements in left side\n   * (It'll be displayed in right side of back button)\n   */\n  appendLeft?: React.ReactNode\n\n  /**\n   * Append elements in right side\n   * (It'll be displayed in left side of close button when `closeButtonLocation` is `right`)\n   */\n  appendRight?: React.ReactNode\n\n  /**\n   * Location of close button (default: `left`)\n   */\n  closeButtonLocation?: 'left' | 'right'\n\n  /**\n   * Replace back button\n   */\n  customBackButton?: React.ReactNode\n\n  /**\n   * Replace close button\n   */\n  customCloseButton?: React.ReactNode\n\n  /**\n   * Remove border\n   */\n  noBorder?: boolean\n\n  /**\n   * Disable scroll to top feature (iOS Only)\n   */\n  disableScrollToTop?: boolean\n\n  /**\n   * When top part clicked (iOS Only)\n   */\n  onTopClick?: () => void\n}\nconst ScreenHelmet: React.FC<ScreenHelmetProps> = (props) => {\n  const screen = useScreenInstanceOptions()\n\n  useEffect(() => {\n    screen.setNavbar({\n      visible: true,\n      title: props.title ?? null,\n      appendLeft: props.appendLeft ?? null,\n      appendRight: props.appendRight ?? null,\n      closeButtonLocation: props.closeButtonLocation ?? 'left',\n      customBackButton: props.customBackButton ?? null,\n      customCloseButton: props.customCloseButton ?? null,\n      disableScrollToTop: props.disableScrollToTop ?? false,\n      noBorder: props.noBorder ?? false,\n      onTopClick: props.onTopClick,\n    })\n  }, [\n    props.title,\n    props.appendLeft,\n    props.appendRight,\n    props.closeButtonLocation,\n    props.customBackButton,\n    props.customCloseButton,\n    props.disableScrollToTop,\n    props.noBorder,\n    props.onTopClick,\n  ])\n\n  useEffect(() => {\n    return () => {\n      screen.setNavbar({\n        visible: false,\n        title: null,\n        appendLeft: null,\n        appendRight: null,\n        closeButtonLocation: 'left',\n        customBackButton: null,\n        customCloseButton: null,\n        disableScrollToTop: false,\n        noBorder: false,\n        onTopClick: undefined,\n      })\n    }\n  }, [])\n\n  return null\n}\n\nexport default ScreenHelmet\n","import { useMemo } from 'react'\nimport { matchPath } from 'react-router-dom'\n\nimport { useScreenInstanceInfo } from './contexts'\n\nexport function useParams<\n  T extends { [key in keyof T]: string } = {}\n>(): Partial<T> {\n  const { as, path } = useScreenInstanceInfo()\n  return useMemo(() => matchPath<T>(as, path)?.params ?? {}, [as, path])\n}\n","import { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport { useScreenInstanceInfo } from './contexts'\n\nexport function useQueryParams<\n  T extends { [key in keyof T]: string } = {}\n>(options?: { ignoreNestedRoutes?: boolean }): Partial<T> {\n  const ignoreNestedRoutes = !!options?.ignoreNestedRoutes\n\n  const location = useLocation()\n  const { as } = useScreenInstanceInfo()\n\n  const parse = useMemo(() => {\n    let prevParams: Partial<T> = {}\n\n    return ({ pathname, search }: { pathname: string; search: string }) => {\n      if (pathname === as) {\n        prevParams = Object.fromEntries(\n          new URLSearchParams(search).entries()\n        ) as Partial<T>\n      }\n      return prevParams\n    }\n  }, [as])\n\n  const queryParams = useMemo(\n    () =>\n      parse({\n        pathname: location.pathname,\n        search: location.search,\n      }),\n    [\n      ignoreNestedRoutes,\n      ...(ignoreNestedRoutes ? [as] : [location.pathname, location.search]),\n    ]\n  )\n\n  return queryParams\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__536__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(654);\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}